From b7c9d9df42bbea46779970ce0855578032c1c10c Mon Sep 17 00:00:00 2001
From: root <root@akrolf516z33>
Date: Fri, 12 Jan 2024 02:15:09 +0000
Subject: [PATCH] Revert "[rubygems/rubygems] Allow gem exec gem"

This reverts commit 2dd96983505285bf58845d1687a9a6d6c0af959b.
---
 lib/rubygems/commands/exec_command.rb         | 19 ++------
 .../test_gem_commands_exec_command.rb         | 47 -------------------
 2 files changed, 5 insertions(+), 61 deletions(-)

diff --git a/lib/rubygems/commands/exec_command.rb b/lib/rubygems/commands/exec_command.rb
index d588804290..1cb390ae47 100644
--- a/lib/rubygems/commands/exec_command.rb
+++ b/lib/rubygems/commands/exec_command.rb
@@ -2,7 +2,6 @@
 
 require_relative "../command"
 require_relative "../dependency_installer"
-require_relative "../gem_runner"
 require_relative "../package"
 require_relative "../version_option"
 
@@ -62,11 +61,7 @@ def execute
     check_executable
 
     print_command
-    if options[:gem_name] == "gem" && options[:executable] == "gem"
-      set_gem_exec_install_paths
-      Gem::GemRunner.new.run options[:args]
-      return
-    elsif options[:conservative]
+    if options[:conservative]
       install_if_needed
     else
       install
@@ -142,19 +137,15 @@ def install_if_needed
     activate!
   end
 
-  def set_gem_exec_install_paths
+  def install
+    gem_name = options[:gem_name]
+    gem_version = options[:version]
+
     home = File.join(Gem.dir, "gem_exec")
 
     ENV["GEM_PATH"] = ([home] + Gem.path).join(File::PATH_SEPARATOR)
     ENV["GEM_HOME"] = home
     Gem.clear_paths
-  end
-
-  def install
-    set_gem_exec_install_paths
-
-    gem_name = options[:gem_name]
-    gem_version = options[:version]
 
     install_options = options.merge(
       minimal_deps: false,
diff --git a/test/rubygems/test_gem_commands_exec_command.rb b/test/rubygems/test_gem_commands_exec_command.rb
index e52fe247a2..1258302092 100644
--- a/test/rubygems/test_gem_commands_exec_command.rb
+++ b/test/rubygems/test_gem_commands_exec_command.rb
@@ -706,53 +706,6 @@ def test_uses_newest_version_of_dependency
     end
   end
 
-  def test_gem_exec_gem_uninstall
-    spec_fetcher do |fetcher|
-      fetcher.download "a", 2 do |s|
-        s.executables = %w[a]
-        s.files = %w[bin/a lib/a.rb]
-        s.add_runtime_dependency "b"
-
-        write_file File.join(*%W[gems #{s.original_name} bin a]) do |f|
-          f << "Gem.ui.say #{s.original_name.dump}"
-        end
-      end
-
-      fetcher.download "b", 2 do |s|
-        s.files = %w[lib/b.rb]
-      end
-    end
-
-    use_ui @ui do
-      invoke "a:2"
-      assert_equal "a-2\n", @ui.output
-
-      invoke "gem", "list", "--local"
-      assert_includes @ui.output, "a (2)\n"
-      assert_includes @ui.output, "b (2)\n"
-
-      begin
-        invoke "gem", "uninstall", "--verbose", "-x", "a"
-      rescue StandardError
-        nil
-      end
-
-      assert_empty @ui.error
-      refute_includes @ui.output, "running gem exec with"
-      assert_includes @ui.output, "Successfully uninstalled a-2\n"
-
-      invoke "--verbose", "gem", "uninstall", "b"
-      assert_includes @ui.output, "Successfully uninstalled b-2\n"
-
-      invoke "gem", "list", "--local"
-      assert_empty @ui.error
-      assert_match(/\A\s*\** LOCAL GEMS \**\s*\z/m, @ui.output)
-
-      invoke "gem", "env", "GEM_HOME"
-      assert_equal "#{@gem_home}/gem_exec\n", @ui.output
-    end
-  end
-
   def test_only_prerelease_available
     spec_fetcher do |fetcher|
       fetcher.download "a", "1.a" do |s|
-- 
2.43.0

