From 739ae1461ed46be91ed8a3a9200c8da47ac4c7ce Mon Sep 17 00:00:00 2001
From: root <root@akrolf516z33>
Date: Mon, 1 Jan 2024 17:54:30 +0000
Subject: [PATCH] remove-race-tests-that-fail-under-parallelism

---
 tests/test-dirstate-race.t                |  250 ---
 tests/test-dirstate-race2.t               |   89 -
 tests/test-dirstate-read-race.t           |  408 -----
 tests/test-dirstate-status-write-race.t   |  460 -----
 tests/test-push-race.t                    | 1904 ---------------------
 tests/test-transaction-wc-rollback-race.t |  263 ---
 6 files changed, 3374 deletions(-)
 delete mode 100644 tests/test-dirstate-race.t
 delete mode 100644 tests/test-dirstate-race2.t
 delete mode 100644 tests/test-dirstate-read-race.t
 delete mode 100644 tests/test-dirstate-status-write-race.t
 delete mode 100644 tests/test-push-race.t
 delete mode 100644 tests/test-transaction-wc-rollback-race.t

diff --git a/tests/test-dirstate-race.t b/tests/test-dirstate-race.t
deleted file mode 100644
index bd4e97f..0000000
--- a/tests/test-dirstate-race.t
+++ /dev/null
@@ -1,250 +0,0 @@
-#testcases dirstate-v1 dirstate-v2
-
-#if dirstate-v2
-  $ cat >> $HGRCPATH << EOF
-  > [format]
-  > use-dirstate-v2=1
-  > [storage]
-  > dirstate-v2.slow-path=allow
-  > EOF
-#endif
-
-  $ hg init repo
-  $ cd repo
-  $ echo a > a
-  $ hg add a
-  $ hg commit -m test
-
-Do we ever miss a sub-second change?:
-
-  $ for i in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20; do
-  >     hg update -qC 0
-  >     echo b > a
-  >     hg st
-  > done
-  M a
-  M a
-  M a
-  M a
-  M a
-  M a
-  M a
-  M a
-  M a
-  M a
-  M a
-  M a
-  M a
-  M a
-  M a
-  M a
-  M a
-  M a
-  M a
-  M a
-
-  $ echo test > b
-  $ mkdir dir1
-  $ echo test > dir1/c
-  $ echo test > d
-
-  $ echo test > e
-#if execbit
-A directory will typically have the execute bit -- make sure it doesn't get
-confused with a file with the exec bit set
-  $ chmod +x e
-#endif
-
-  $ hg add b dir1 d e
-  adding dir1/c
-  $ hg commit -m test2
-
-  $ cat >> $TESTTMP/dirstaterace.py << EOF
-  > from mercurial import (
-  >     context,
-  >     extensions,
-  > )
-  > def extsetup(ui):
-  >     extensions.wrapfunction(context.workingctx, '_checklookup', overridechecklookup)
-  > def overridechecklookup(orig, self, *args, **kwargs):
-  >     # make an update that changes the dirstate from underneath
-  >     self._repo.ui.system(br"sh '$TESTTMP/dirstaterace.sh'",
-  >                          cwd=self._repo.root)
-  >     return orig(self, *args, **kwargs)
-  > EOF
-
-  $ hg debugrebuilddirstate
-  $ hg debugdirstate
-  n   0         -1 unset               a
-  n   0         -1 unset               b
-  n   0         -1 unset               d
-  n   0         -1 unset               dir1/c
-  n   0         -1 unset               e
-
-XXX Note that this returns M for files that got replaced by directories. This is
-definitely a bug, but the fix for that is hard and the next status run is fine
-anyway.
-
-  $ cat > $TESTTMP/dirstaterace.sh <<EOF
-  > rm b && rm -r dir1 && rm d && mkdir d && rm e && mkdir e
-  > EOF
-
-  $ sleep 1 # ensure non-ambiguous mtime
-  $ hg status --config extensions.dirstaterace=$TESTTMP/dirstaterace.py
-  M d
-  M e
-  ! b
-  ! dir1/c
-  $ hg debugdirstate
-  n 644          2 * a (glob)
-  n   0         -1 unset               b
-  n   0         -1 unset               d
-  n   0         -1 unset               dir1/c
-  n   0         -1 unset               e
-
-  $ hg status
-  ! b
-  ! d
-  ! dir1/c
-  ! e
-
-  $ rmdir d e
-  $ hg update -C -q .
-
-Test that dirstate changes aren't written out at the end of "hg
-status", if .hg/dirstate is already changed simultaneously before
-acquisition of wlock in workingctx._poststatusfixup().
-
-This avoidance is important to keep consistency of dirstate in race
-condition (see issue5584 for detail).
-
-  $ hg parents -q
-  1:* (glob)
-
-  $ hg debugrebuilddirstate
-  $ hg debugdirstate
-  n   0         -1 unset               a
-  n   0         -1 unset               b
-  n   0         -1 unset               d
-  n   0         -1 unset               dir1/c
-  n   0         -1 unset               e
-
-  $ cat > $TESTTMP/dirstaterace.sh <<EOF
-  > # This script assumes timetable of typical issue5584 case below:
-  > #
-  > # 1. "hg status" loads .hg/dirstate
-  > # 2. "hg status" confirms clean-ness of FILE
-  > # 3. "hg update -C 0" updates the working directory simultaneously
-  > #    (FILE is removed, and FILE is dropped from .hg/dirstate)
-  > # 4. "hg status" acquires wlock
-  > #    (.hg/dirstate is re-loaded = no FILE entry in dirstate)
-  > # 5. "hg status" marks FILE in dirstate as clean
-  > #    (FILE entry is added to in-memory dirstate)
-  > # 6. "hg status" writes dirstate changes into .hg/dirstate
-  > #    (FILE entry is written into .hg/dirstate)
-  > #
-  > # To reproduce similar situation easily and certainly, #2 and #3
-  > # are swapped.  "hg cat" below ensures #2 on "hg status" side.
-  > 
-  > hg update -q -C 0
-  > hg cat -r 1 b > b
-  > # make sure the timestamps is not ambiguous and a write will be issued
-  > touch -t 198606251012 b
-  > EOF
-
-"hg status" below should excludes "e", of which exec flag is set, for
-portability of test scenario, because unsure but missing "e" is
-treated differently in _checklookup() according to runtime platform.
-
-- "missing(!)" on POSIX, "pctx[f].cmp(self[f])" raises ENOENT
-- "modified(M)" on Windows, "self.flags(f) != pctx.flags(f)" is True
-
-  $ hg status --config extensions.dirstaterace=$TESTTMP/dirstaterace.py --debug -X path:e
-  skip updating dirstate: identity mismatch
-  M a
-  ! d
-  ! dir1/c
-
-  $ hg parents -q
-  0:* (glob)
-  $ hg files
-  a
-  $ hg debugdirstate
-  n * * * a (glob)
-
-  $ rm b
-
-#if fsmonitor
-
-Create fsmonitor state.
-
-  $ hg status
-  $ f --type .hg/fsmonitor.state
-  .hg/fsmonitor.state: file
-
-Test that invalidating fsmonitor state in the middle (which doesn't require the
-wlock) causes the fsmonitor update to be skipped.
-hg debugrebuilddirstate ensures that the dirstaterace hook will be called, but
-it also invalidates the fsmonitor state. So back it up and restore it.
-
-  $ mv .hg/fsmonitor.state .hg/fsmonitor.state.tmp
-  $ hg debugrebuilddirstate
-  $ mv .hg/fsmonitor.state.tmp .hg/fsmonitor.state
-
-  $ cat > $TESTTMP/dirstaterace.sh <<EOF
-  > rm .hg/fsmonitor.state
-  > EOF
-
-  $ hg status --config extensions.dirstaterace=$TESTTMP/dirstaterace.py --debug
-  skip updating fsmonitor.state: identity mismatch
-  $ f .hg/fsmonitor.state
-  .hg/fsmonitor.state: file not found
-
-#endif
-
-Set up a rebase situation for issue5581.
-
-  $ echo c2 > a
-  $ echo c2 > b
-  $ hg add b
-  $ hg commit -m c2
-  created new head
-  $ echo c3 >> a
-  $ hg commit -m c3
-  $ hg update 2
-  1 files updated, 0 files merged, 0 files removed, 0 files unresolved
-  $ echo c4 >> a
-  $ echo c4 >> b
-  $ hg commit -m c4
-  created new head
-
-Configure a merge tool that runs status in the middle of the rebase. The goal of
-the status call is to trigger a potential bug if fsmonitor's state is written
-even though the wlock is held by another process. The output of 'hg status' in
-the merge tool goes to /dev/null because we're more interested in the results of
-'hg status' run after the rebase.
-
-  $ cat >> $TESTTMP/mergetool-race.sh << EOF
-  > echo "custom merge tool"
-  > printf "c2\nc3\nc4\n" > \$1
-  > hg --cwd "$TESTTMP/repo" status > /dev/null
-  > echo "custom merge tool end"
-  > EOF
-  $ cat >> $HGRCPATH << EOF
-  > [extensions]
-  > rebase =
-  > [merge-tools]
-  > test.executable=sh
-  > test.args=$TESTTMP/mergetool-race.sh \$output
-  > EOF
-
-  $ hg rebase -s . -d 3 --tool test
-  rebasing 4:b08445fd6b2a tip "c4"
-  merging a
-  custom merge tool
-  custom merge tool end
-  saved backup bundle to $TESTTMP/repo/.hg/strip-backup/* (glob)
-
-This hg status should be empty, whether or not fsmonitor is enabled (issue5581).
-
-  $ hg status
diff --git a/tests/test-dirstate-race2.t b/tests/test-dirstate-race2.t
deleted file mode 100644
index 56d0ebd..0000000
--- a/tests/test-dirstate-race2.t
+++ /dev/null
@@ -1,89 +0,0 @@
-#testcases dirstate-v1 dirstate-v2
-
-#if dirstate-v2
-  $ cat >> $HGRCPATH << EOF
-  > [format]
-  > use-dirstate-v2=1
-  > [storage]
-  > dirstate-v2.slow-path=allow
-  > EOF
-#endif
-
-Checking the size/permissions/file-type of files stored in the
-dirstate after an update where the files are changed concurrently
-outside of hg's control.
-
-  $ hg init repo
-  $ cd repo
-  $ echo a > a
-  $ hg commit -qAm _
-  $ echo aa > a
-  $ hg commit -m _
-# this sleep is there to ensure current time has -at-least- one second away
-# from the current time. It ensure the mtime is not ambiguous. If the test
-# "sleep" longer this will be fine.
-# It is not used to synchronise parallele operation so it is "fine" to use it.
-  $ sleep 1
-  $ hg status
-
-  $ hg debugdirstate --no-dates
-  n 644          3 (set  |unset)               a (re)
-
-  $ cat >> $TESTTMP/dirstaterace.py << EOF
-  > import time
-  > from mercurial import (
-  >     commit,
-  >     extensions,
-  >     merge,
-  > )
-  > def extsetup(ui):
-  >     extensions.wrapfunction(merge, 'applyupdates', wrap(0))
-  >     extensions.wrapfunction(commit, 'commitctx', wrap(1))
-  > def wrap(duration):
-  >     def new(orig, *args, **kwargs):
-  >         res = orig(*args, **kwargs)
-  >         with open("a", "w"):
-  >             pass # just truncate the file
-  >         time.sleep(duration)
-  >         return res
-  >     return new
-  > EOF
-
-Do an update where file 'a' is changed between hg writing it to disk
-and hg writing the dirstate. The dirstate is correct nonetheless, and
-so hg status correctly shows a as clean.
-
-  $ hg up -r 0 --config extensions.race=$TESTTMP/dirstaterace.py
-  1 files updated, 0 files merged, 0 files removed, 0 files unresolved
-  $ hg debugdirstate --no-dates
-  n 644          2 (set  |unset)               a (re)
-  $ echo a > a; hg status; hg diff
-
-Do a commit where file 'a' is changed between hg committing its new
-revision into the repository, and the writing of the dirstate.
-
-This used to results in a corrupted dirstate (size did not match committed size).
-
-  $ echo aaa > a; hg commit -qm _
-  $ hg merge -qr 1; hg resolve -m; rm a.orig
-  warning: conflicts while merging a! (edit, then use 'hg resolve --mark')
-  (no more unresolved files)
-  $ cat a
-  <<<<<<< working copy: be46f74ce38d - test: _
-  aaa
-  =======
-  aa
-  >>>>>>> merge rev:    eb3fc6c17aa3 - test: _
-  $ hg debugdirstate --no-dates
-  m   0         -2 (set  |unset)               a (re)
-  $ hg commit -m _ --config extensions.race=$TESTTMP/dirstaterace.py
-  $ hg debugdirstate --no-dates
-  n   0         -1 unset               a
-  $ cat a | wc -c
-   *0 (re)
-  $ hg cat -r . a | wc -c
-   *105 (re)
-  $ hg status; hg diff --stat
-  M a
-   a |  5 -----
-   1 files changed, 0 insertions(+), 5 deletions(-)
diff --git a/tests/test-dirstate-read-race.t b/tests/test-dirstate-read-race.t
deleted file mode 100644
index 0e362b7..0000000
--- a/tests/test-dirstate-read-race.t
+++ /dev/null
@@ -1,408 +0,0 @@
-==============================================================================
-Check potential race conditions between a dirstate's read and other operations
-==============================================================================
-
-#testcases dirstate-v1 dirstate-v2-append dirstate-v2-rewrite
-#testcases pre-all-read pre-some-read
-
-Some commands, like `hg status`, do not need to take the wlock but need to
-access dirstate data.
-Other commands might update the dirstate data while this happens.
-
-This can create issues if repository data is read in the wrong order, or for
-the dirstate-v2 format where the data is contained in multiple files.
-
-This test file is meant to test various cases where such parallel operations
-happen and make sure the reading process behaves fine. We do so with a `hg
-status` command since it is probably the most advanced of such read-only
-command.
-
-It bears simililarity with `tests/test-dirstate-status-race.t ` but tests a
-different type of race.
-
-Setup
-=====
-
-  $ cat >> $HGRCPATH << EOF
-  > [storage]
-  > dirstate-v2.slow-path=allow
-  > EOF
-
-#if no-dirstate-v1
-  $ cat >> $HGRCPATH << EOF
-  > [format]
-  > use-dirstate-v2=yes
-  > EOF
-#else
-  $ cat >> $HGRCPATH << EOF
-  > [format]
-  > use-dirstate-v2=no
-  > EOF
-#endif
-
-#if dirstate-v2-rewrite
-  $ d2args="--config devel.dirstate.v2.data_update_mode=force-new"
-#endif
-#if dirstate-v2-append
-  $ d2args="--config devel.dirstate.v2.data_update_mode=force-append"
-#endif
-
-
-#if dirstate-v1
-  $ cfg="devel.sync.dirstate.pre-read-file"
-#else
-#if pre-all-read
-  $ cfg="devel.sync.dirstate.pre-read-file"
-#else
-  $ cfg="devel.sync.dirstate.post-docket-read-file"
-#endif
-#endif
-
-  $ directories="dir dir/nested dir2"
-  $ first_files="dir/nested/a dir/b dir/c dir/d dir2/e f"
-  $ second_files="g dir/nested/h dir/i dir/j dir2/k dir2/l dir/nested/m"
-  $ extra_files="dir/n dir/o p q"
-
-  $ hg init reference-repo
-  $ cd reference-repo
-  $ mkdir -p dir/nested dir2
-  $ touch -t 200001010000 $first_files $directories
-  $ hg commit -Aqm "recreate a bunch of files to facilitate dirstate-v2 append"
-  $ touch -t 200001010010 $second_files $directories
-  $ hg commit -Aqm "more files to have two commit"
-  $ hg log -G -v
-  @  changeset:   1:9a86dcbfb938
-  |  tag:         tip
-  |  user:        test
-  |  date:        Thu Jan 01 00:00:00 1970 +0000
-  |  files:       dir/i dir/j dir/nested/h dir/nested/m dir2/k dir2/l g
-  |  description:
-  |  more files to have two commit
-  |
-  |
-  o  changeset:   0:4f23db756b09
-     user:        test
-     date:        Thu Jan 01 00:00:00 1970 +0000
-     files:       dir/b dir/c dir/d dir/nested/a dir2/e f
-     description:
-     recreate a bunch of files to facilitate dirstate-v2 append
-  
-  
-  $ hg manifest
-  dir/b
-  dir/c
-  dir/d
-  dir/i
-  dir/j
-  dir/nested/a
-  dir/nested/h
-  dir/nested/m
-  dir2/e
-  dir2/k
-  dir2/l
-  f
-  g
-
-Add some unknown files and refresh the dirstate
-
-  $ touch -t 200001010020 $extra_files
-  $ hg add dir/o
-  $ hg remove dir/nested/m
-
-  $ hg st --config devel.dirstate.v2.data_update_mode=force-new
-  A dir/o
-  R dir/nested/m
-  ? dir/n
-  ? p
-  ? q
-  $ hg debugstate
-  n 644          0 2000-01-01 00:00:00 dir/b
-  n 644          0 2000-01-01 00:00:00 dir/c
-  n 644          0 2000-01-01 00:00:00 dir/d
-  n 644          0 2000-01-01 00:10:00 dir/i
-  n 644          0 2000-01-01 00:10:00 dir/j
-  n 644          0 2000-01-01 00:00:00 dir/nested/a
-  n 644          0 2000-01-01 00:10:00 dir/nested/h
-  r ?????????????????????????????????? dir/nested/m (glob)
-  a ?????????????????????????????????? dir/o (glob)
-  n 644          0 2000-01-01 00:00:00 dir2/e
-  n 644          0 2000-01-01 00:10:00 dir2/k
-  n 644          0 2000-01-01 00:10:00 dir2/l
-  n 644          0 2000-01-01 00:00:00 f
-  n 644          0 2000-01-01 00:10:00 g
-  $ hg debugstate > ../reference
-  $ cd ..
-
-Actual Testing
-==============
-
-Race with a `hg add`
--------------------
-
-  $ cp -a reference-repo race-with-add
-  $ cd race-with-add
-
-spin a `hg status` with some caches to update
-
-  $ hg st >$TESTTMP/status-race-lock.out 2>$TESTTMP/status-race-lock.log \
-  > --config rhg.on-unsupported=abort \
-  > --config ${cfg}=$TESTTMP/status-race-lock \
-  > &
-  $ $RUNTESTDIR/testlib/wait-on-file 5 $TESTTMP/status-race-lock.waiting
-
-Add a file
-
-  $ hg $d2args add dir/n
-  $ touch $TESTTMP/status-race-lock
-  $ wait
-
-The file should in a "added" state
-
-  $ hg status
-  A dir/n
-  A dir/o
-  R dir/nested/m
-  ? p
-  ? q
-
-The status process should return a consistent result and not crash.
-
-#if dirstate-v1
-  $ cat $TESTTMP/status-race-lock.out
-  A dir/n
-  A dir/o
-  R dir/nested/m
-  ? p
-  ? q
-#else
-#if rhg pre-some-read dirstate-v2-append
-  $ cat $TESTTMP/status-race-lock.out
-  A dir/o
-  R dir/nested/m
-  ? dir/n
-  ? p
-  ? q
-#else
-#if rust no-rhg dirstate-v2-append
-  $ cat $TESTTMP/status-race-lock.out
-  A dir/o
-  R dir/nested/m
-  ? dir/n
-  ? p
-  ? q
-#else
-  $ cat $TESTTMP/status-race-lock.out
-  A dir/n
-  A dir/o
-  R dir/nested/m
-  ? p
-  ? q
-#endif
-#endif
-#endif
-  $ cat $TESTTMP/status-race-lock.log
-
-final cleanup
-
-  $ rm $TESTTMP/status-race-lock $TESTTMP/status-race-lock.waiting
-  $ cd ..
-
-Race with a `hg commit`
------------------------
-
-  $ cp -a reference-repo race-with-commit
-  $ cd race-with-commit
-
-spin a `hg status with some cache to update
-
-  $ hg st >$TESTTMP/status-race-lock.out 2>$TESTTMP/status-race-lock.log \
-  > --config rhg.on-unsupported=abort \
-  > --config ${cfg}=$TESTTMP/status-race-lock \
-  > &
-  $ $RUNTESTDIR/testlib/wait-on-file 5 $TESTTMP/status-race-lock.waiting
-
-Add a do a commit
-
-  $ hg status
-  A dir/o
-  R dir/nested/m
-  ? dir/n
-  ? p
-  ? q
-  $ hg $d2args commit -m 'racing commit'
-  $ touch $TESTTMP/status-race-lock
-  $ wait
-
-commit was created, and status is now clean
-
-  $ hg log -GT '{node|short} {desc}\n'
-  @  02a67a77ee9b racing commit
-  |
-  o  9a86dcbfb938 more files to have two commit
-  |
-  o  4f23db756b09 recreate a bunch of files to facilitate dirstate-v2 append
-  
-  $ hg status
-  ? dir/n
-  ? p
-  ? q
-
-The status process should return a consistent result and not crash.
-
-#if no-rhg
-  $ cat $TESTTMP/status-race-lock.out
-  A dir/o
-  R dir/nested/m
-  ? dir/n
-  ? p
-  ? q
-  $ cat $TESTTMP/status-race-lock.log
-#else
-#if pre-some-read dirstate-v2-append
-  $ cat $TESTTMP/status-race-lock.out
-  A dir/o
-  R dir/nested/m
-  ? dir/n
-  ? p
-  ? q
-  $ cat $TESTTMP/status-race-lock.log
-#else
-  $ cat $TESTTMP/status-race-lock.out
-  ? dir/n
-  ? p
-  ? q
-  $ cat $TESTTMP/status-race-lock.log
-#endif
-#endif
-
-final cleanup
-
-  $ rm $TESTTMP/status-race-lock $TESTTMP/status-race-lock.waiting
-  $ cd ..
-
-Race with a `hg update`
------------------------
-
-  $ cp -a reference-repo race-with-update
-  $ cd race-with-update
-
-spin a `hg status` with some caches to update
-
-  $ hg st >$TESTTMP/status-race-lock.out 2>$TESTTMP/status-race-lock.log \
-  > --config rhg.on-unsupported=abort \
-  > --config ${cfg}=$TESTTMP/status-race-lock \
-  > &
-  $ $RUNTESTDIR/testlib/wait-on-file 5 $TESTTMP/status-race-lock.waiting
-do an update
-
-  $ hg status
-  A dir/o
-  R dir/nested/m
-  ? dir/n
-  ? p
-  ? q
-  $ hg log -GT '{node|short} {desc}\n'
-  @  9a86dcbfb938 more files to have two commit
-  |
-  o  4f23db756b09 recreate a bunch of files to facilitate dirstate-v2 append
-  
-  $ hg $d2args update --merge ".~1"
-  0 files updated, 0 files merged, 6 files removed, 0 files unresolved
-  $ touch $TESTTMP/status-race-lock
-  $ wait
-  $ hg log -GT '{node|short} {desc}\n'
-  o  9a86dcbfb938 more files to have two commit
-  |
-  @  4f23db756b09 recreate a bunch of files to facilitate dirstate-v2 append
-  
-  $ hg status
-  A dir/o
-  ? dir/n
-  ? p
-  ? q
-
-The status process should return a consistent result and not crash.
-
-#if rhg dirstate-v2-append pre-some-read
-  $ cat $TESTTMP/status-race-lock.out
-  A dir/o
-  R dir/nested/m
-  ! dir/i
-  ! dir/j
-  ! dir/nested/h
-  ! dir2/k
-  ! dir2/l
-  ! g
-  ? dir/n
-  ? p
-  ? q
-#else
-#if rust no-rhg dirstate-v2-append
-  $ cat $TESTTMP/status-race-lock.out
-  A dir/o
-  R dir/nested/m
-  ! dir/i
-  ! dir/j
-  ! dir/nested/h
-  ! dir2/k
-  ! dir2/l
-  ! g
-  ? dir/n
-  ? p
-  ? q
-#else
-  $ cat $TESTTMP/status-race-lock.out
-  A dir/o
-  ? dir/n
-  ? p
-  ? q
-#endif
-#endif
-  $ cat $TESTTMP/status-race-lock.log
-
-final cleanup
-
-  $ rm $TESTTMP/status-race-lock $TESTTMP/status-race-lock.waiting
-  $ cd ..
-
-Race with a cache updating `hg status`
---------------------------------------
-
-It is interesting to race with "read-only" operation (that still update its cache)
-
-  $ cp -a reference-repo race-with-status
-  $ cd race-with-status
-
-spin a `hg status` with some caches to update
-
-  $ hg st >$TESTTMP/status-race-lock.out 2>$TESTTMP/status-race-lock.log \
-  > --config rhg.on-unsupported=abort \
-  > --config ${cfg}=$TESTTMP/status-race-lock \
-  > &
-  $ $RUNTESTDIR/testlib/wait-on-file 5 $TESTTMP/status-race-lock.waiting
-do an update
-
-  $ touch -t 200001020006 f
-  $ hg $d2args status
-  A dir/o
-  R dir/nested/m
-  ? dir/n
-  ? p
-  ? q
-  $ touch $TESTTMP/status-race-lock
-  $ wait
-
-The status process should return a consistent result and not crash.
-
-  $ cat $TESTTMP/status-race-lock.out
-  A dir/o
-  R dir/nested/m
-  ? dir/n
-  ? p
-  ? q
-  $ cat $TESTTMP/status-race-lock.log
-
-final cleanup
-
-  $ rm $TESTTMP/status-race-lock $TESTTMP/status-race-lock.waiting
-  $ cd ..
diff --git a/tests/test-dirstate-status-write-race.t b/tests/test-dirstate-status-write-race.t
deleted file mode 100644
index 0a9a69d..0000000
--- a/tests/test-dirstate-status-write-race.t
+++ /dev/null
@@ -1,460 +0,0 @@
-=====================================================================
-Check potential race conditions between a status and other operations
-=====================================================================
-
-#testcases dirstate-v1 dirstate-v2-append dirstate-v2-rewrite
-
-The `hg status` command can run without the wlock, however it might end up
-having to update the on-disk dirstate files, for example to mark ambiguous
-files as clean, or to update directory caches information with dirstate-v2.
-
-
-If another process updates the dirstate in the meantime we might run into
-trouble. Especially, commands doing semantic changes like `hg add` or
- `hg commit` should not see their update erased by a concurrent status.
-
-Unlike commands like `add` or `commit`, `status` only writes the dirstate
-to update caches, no actual information is lost if we fail to write to disk.
-
-
-This test file is meant to test various cases where such parallel operations
-between a status with reasons to update the dirstate and another semantic
-changes happen.
-
-
-Setup
-=====
-
-  $ cat >> $HGRCPATH << EOF
-  > [storage]
-  > dirstate-v2.slow-path=allow
-  > EOF
-
-#if no-dirstate-v1
-  $ cat >> $HGRCPATH << EOF
-  > [format]
-  > use-dirstate-v2=yes
-  > EOF
-#else
-  $ cat >> $HGRCPATH << EOF
-  > [format]
-  > use-dirstate-v2=no
-  > EOF
-#endif
-
-#if dirstate-v2-rewrite
-  $ d2args="--config devel.dirstate.v2.data_update_mode=force-new"
-#endif
-#if dirstate-v2-append
-  $ d2args="--config devel.dirstate.v2.data_update_mode=force-append"
-#endif
-
-  $ directories="dir dir/nested dir2"
-  $ first_files="dir/nested/a dir/b dir/c dir/d dir2/e f"
-  $ second_files="g dir/nested/h dir/i dir/j dir2/k dir2/l dir/nested/m"
-  $ extra_files="dir/n dir/o p q"
-
-  $ hg init reference-repo
-  $ cd reference-repo
-  $ mkdir -p dir/nested dir2
-  $ touch -t 200001010000 $first_files $directories
-  $ hg commit -Aqm "recreate a bunch of files to facilitate dirstate-v2 append"
-  $ touch -t 200001010010 $second_files $directories
-  $ hg commit -Aqm "more files to have two commits"
-  $ hg log -G -v
-  @  changeset:   1:c349430a1631
-  |  tag:         tip
-  |  user:        test
-  |  date:        Thu Jan 01 00:00:00 1970 +0000
-  |  files:       dir/i dir/j dir/nested/h dir/nested/m dir2/k dir2/l g
-  |  description:
-  |  more files to have two commits
-  |
-  |
-  o  changeset:   0:4f23db756b09
-     user:        test
-     date:        Thu Jan 01 00:00:00 1970 +0000
-     files:       dir/b dir/c dir/d dir/nested/a dir2/e f
-     description:
-     recreate a bunch of files to facilitate dirstate-v2 append
-  
-  
-  $ hg manifest
-  dir/b
-  dir/c
-  dir/d
-  dir/i
-  dir/j
-  dir/nested/a
-  dir/nested/h
-  dir/nested/m
-  dir2/e
-  dir2/k
-  dir2/l
-  f
-  g
-
-Add some unknown files and refresh the dirstate
-
-  $ touch -t 200001010020 $extra_files
-  $ hg add dir/o
-  $ hg remove dir/nested/m
-
-  $ hg st --config devel.dirstate.v2.data_update_mode=force-new
-  A dir/o
-  R dir/nested/m
-  ? dir/n
-  ? p
-  ? q
-  $ hg debugstate
-  n 644          0 2000-01-01 00:00:00 dir/b
-  n 644          0 2000-01-01 00:00:00 dir/c
-  n 644          0 2000-01-01 00:00:00 dir/d
-  n 644          0 2000-01-01 00:10:00 dir/i
-  n 644          0 2000-01-01 00:10:00 dir/j
-  n 644          0 2000-01-01 00:00:00 dir/nested/a
-  n 644          0 2000-01-01 00:10:00 dir/nested/h
-  r ?????????????????????????????????? dir/nested/m (glob)
-  a ?????????????????????????????????? dir/o (glob)
-  n 644          0 2000-01-01 00:00:00 dir2/e
-  n 644          0 2000-01-01 00:10:00 dir2/k
-  n 644          0 2000-01-01 00:10:00 dir2/l
-  n 644          0 2000-01-01 00:00:00 f
-  n 644          0 2000-01-01 00:10:00 g
-  $ hg debugstate > ../reference
-  $ cd ..
-
-Explain / verify the test principles
-------------------------------------
-
-First, we can properly copy the reference
-
-  $ cp -a reference-repo sanity-check
-  $ cd sanity-check
-  $ hg debugstate
-  n 644          0 2000-01-01 00:00:00 dir/b
-  n 644          0 2000-01-01 00:00:00 dir/c
-  n 644          0 2000-01-01 00:00:00 dir/d
-  n 644          0 2000-01-01 00:10:00 dir/i
-  n 644          0 2000-01-01 00:10:00 dir/j
-  n 644          0 2000-01-01 00:00:00 dir/nested/a
-  n 644          0 2000-01-01 00:10:00 dir/nested/h
-  r ?????????????????????????????????? dir/nested/m (glob)
-  a ?????????????????????????????????? dir/o (glob)
-  n 644          0 2000-01-01 00:00:00 dir2/e
-  n 644          0 2000-01-01 00:10:00 dir2/k
-  n 644          0 2000-01-01 00:10:00 dir2/l
-  n 644          0 2000-01-01 00:00:00 f
-  n 644          0 2000-01-01 00:10:00 g
-  $ hg debugstate > ../post-copy
-  $ diff ../reference ../post-copy
-
-And status thinks the cache is in a proper state
-
-  $ hg st
-  A dir/o
-  R dir/nested/m
-  ? dir/n
-  ? p
-  ? q
-  $ hg debugstate
-  n 644          0 2000-01-01 00:00:00 dir/b
-  n 644          0 2000-01-01 00:00:00 dir/c
-  n 644          0 2000-01-01 00:00:00 dir/d
-  n 644          0 2000-01-01 00:10:00 dir/i
-  n 644          0 2000-01-01 00:10:00 dir/j
-  n 644          0 2000-01-01 00:00:00 dir/nested/a
-  n 644          0 2000-01-01 00:10:00 dir/nested/h
-  r ?????????????????????????????????? dir/nested/m (glob)
-  a ?????????????????????????????????? dir/o (glob)
-  n 644          0 2000-01-01 00:00:00 dir2/e
-  n 644          0 2000-01-01 00:10:00 dir2/k
-  n 644          0 2000-01-01 00:10:00 dir2/l
-  n 644          0 2000-01-01 00:00:00 f
-  n 644          0 2000-01-01 00:10:00 g
-  $ hg debugstate > ../post-status
-  $ diff ../reference ../post-status
-
-Then we can start a status that:
-- has some update to do (the touch call)
-- will wait AFTER running status, but before updating the cache on disk
-
-  $ touch -t 200001010001 dir/c
-  $ hg st >$TESTTMP/status-race-lock.out 2>$TESTTMP/status-race-lock.log \
-  > --config rhg.on-unsupported=abort \
-  > --config devel.sync.status.pre-dirstate-write-file=$TESTTMP/status-race-lock \
-  > &
-  $ $RUNTESTDIR/testlib/wait-on-file 5 $TESTTMP/status-race-lock.waiting
-
-We check it runs the status first by modifying a file and updating another timestamp
-
-  $ touch -t 200001010003 dir/i
-  $ echo babar > dir/j
-  $ touch $TESTTMP/status-race-lock
-  $ wait
-
-The test process should have reported a status before the change we made,
-and should have missed the timestamp update
-
-  $ cat $TESTTMP/status-race-lock.out
-  A dir/o
-  R dir/nested/m
-  ? dir/n
-  ? p
-  ? q
-  $ cat $TESTTMP/status-race-lock.log
-  $ hg debugstate | grep dir/c
-  n 644          0 2000-01-01 00:01:00 dir/c
-  $ hg debugstate | grep dir/i
-  n 644          0 2000-01-01 00:10:00 dir/i
-  $ hg debugstate | grep dir/j
-  n 644          0 2000-01-01 00:10:00 dir/j
-
-final cleanup
-
-  $ rm $TESTTMP/status-race-lock $TESTTMP/status-race-lock.waiting
-  $ cd ..
-
-Actual Testing
-==============
-
-Race with a `hg add`
--------------------
-
-  $ cp -a reference-repo race-with-add
-  $ cd race-with-add
-
-spin a `hg status` with some caches to update
-
-  $ touch -t 200001020001 f
-  $ hg st >$TESTTMP/status-race-lock.out 2>$TESTTMP/status-race-lock.log \
-  > --config rhg.on-unsupported=abort \
-  > --config devel.sync.status.pre-dirstate-write-file=$TESTTMP/status-race-lock \
-  > &
-  $ $RUNTESTDIR/testlib/wait-on-file 5 $TESTTMP/status-race-lock.waiting
-
-Add a file
-
-  $ hg $d2args add dir/n
-  $ touch $TESTTMP/status-race-lock
-  $ wait
-
-The file should in a "added" state
-
-  $ hg status
-  A dir/n
-  A dir/o
-  R dir/nested/m
-  ? p
-  ? q
-
-The status process should return a consistent result and not crash.
-
-  $ cat $TESTTMP/status-race-lock.out
-  A dir/o
-  R dir/nested/m
-  ? dir/n
-  ? p
-  ? q
-  $ cat $TESTTMP/status-race-lock.log
-
-final cleanup
-
-  $ rm $TESTTMP/status-race-lock $TESTTMP/status-race-lock.waiting
-  $ cd ..
-
-Race with a `hg commit`
-----------------------
-
-  $ cp -a reference-repo race-with-commit
-  $ cd race-with-commit
-
-spin a `hg status` with some caches to update
-
-  $ touch -t 200001020001 dir/j
-  $ hg st >$TESTTMP/status-race-lock.out 2>$TESTTMP/status-race-lock.log \
-  > --config rhg.on-unsupported=abort \
-  > --config devel.sync.status.pre-dirstate-write-file=$TESTTMP/status-race-lock \
-  > &
-  $ $RUNTESTDIR/testlib/wait-on-file 5 $TESTTMP/status-race-lock.waiting
-
-Add a file and force the data file rewrite
-
-  $ hg $d2args commit -m created-during-status dir/o
-  $ touch $TESTTMP/status-race-lock
-  $ wait
-
-The parent must change and the status should be clean
-
-  $ hg summary
-  parent: 2:2e3b442a2fd4 tip
-   created-during-status
-  branch: default
-  commit: 1 removed, 3 unknown
-  update: (current)
-  phases: 3 draft
-  $ hg status
-  R dir/nested/m
-  ? dir/n
-  ? p
-  ? q
-
-The status process should return a consistent result and not crash.
-
-  $ cat $TESTTMP/status-race-lock.out
-  A dir/o
-  R dir/nested/m
-  ? dir/n
-  ? p
-  ? q
-  $ cat $TESTTMP/status-race-lock.log
-
-final cleanup
-
-  $ rm $TESTTMP/status-race-lock $TESTTMP/status-race-lock.waiting
-  $ cd ..
-
-Race with a `hg update`
-----------------------
-
-  $ cp -a reference-repo race-with-update
-  $ cd race-with-update
-
-spin a `hg status` with some caches to update
-
-  $ touch -t 200001020001 dir2/k
-  $ hg st >$TESTTMP/status-race-lock.out 2>$TESTTMP/status-race-lock.log \
-  > --config rhg.on-unsupported=abort \
-  > --config devel.sync.status.pre-dirstate-write-file=$TESTTMP/status-race-lock \
-  > &
-  $ $RUNTESTDIR/testlib/wait-on-file 5 $TESTTMP/status-race-lock.waiting
-
-Add a file and force the data file rewrite
-
-  $ hg $d2args update ".~1"
-  0 files updated, 0 files merged, 6 files removed, 0 files unresolved
-  $ touch $TESTTMP/status-race-lock
-  $ wait
-
-The parent must change and the status should be clean
-
-  $ hg summary
-  parent: 0:4f23db756b09 
-   recreate a bunch of files to facilitate dirstate-v2 append
-  branch: default
-  commit: 1 added, 3 unknown (new branch head)
-  update: 1 new changesets (update)
-  phases: 2 draft
-  $ hg status
-  A dir/o
-  ? dir/n
-  ? p
-  ? q
-
-The status process should return a consistent result and not crash.
-
-  $ cat $TESTTMP/status-race-lock.out
-  A dir/o
-  R dir/nested/m
-  ? dir/n
-  ? p
-  ? q
-  $ cat $TESTTMP/status-race-lock.log
-
-final cleanup
-
-  $ rm $TESTTMP/status-race-lock $TESTTMP/status-race-lock.waiting
-  $ cd ..
-
-Race with another status
-------------------------
-
-  $ cp -a reference-repo race-with-status
-  $ cd race-with-status
-
-spin a `hg status` with some caches to update
-
-  $ touch -t 200001010030 dir/nested/h
-  $ hg st >$TESTTMP/status-race-lock.out 2>$TESTTMP/status-race-lock.log \
-  > --config rhg.on-unsupported=abort \
-  > --config devel.sync.status.pre-dirstate-write-file=$TESTTMP/status-race-lock \
-  > &
-  $ $RUNTESTDIR/testlib/wait-on-file 5 $TESTTMP/status-race-lock.waiting
-
-touch g
-
-  $ touch -t 200001010025 g
-  $ hg $d2args status
-  A dir/o
-  R dir/nested/m
-  ? dir/n
-  ? p
-  ? q
-  $ touch $TESTTMP/status-race-lock
-  $ wait
-
-the first update should be on disk
-
-  $ hg debugstate --all | grep "g"
-  n 644          0 2000-01-01 00:25:00 g
-
-The status process should return a consistent result and not crash.
-
-  $ cat $TESTTMP/status-race-lock.out
-  A dir/o
-  R dir/nested/m
-  ? dir/n
-  ? p
-  ? q
-  $ cat $TESTTMP/status-race-lock.log
-
-final cleanup
-
-  $ rm $TESTTMP/status-race-lock $TESTTMP/status-race-lock.waiting
-  $ cd ..
-
-Race with the removal of an ambiguous file
-----------------------è-------------------
-
-  $ cp -a reference-repo race-with-remove
-  $ cd race-with-remove
-
-spin a `hg status` with some caches to update
-
-  $ touch -t 200001010035 dir2/l
-  $ hg st >$TESTTMP/status-race-lock.out 2>$TESTTMP/status-race-lock.log \
-  > --config rhg.on-unsupported=abort \
-  > --config devel.sync.status.pre-dirstate-write-file=$TESTTMP/status-race-lock \
-  > &
-  $ $RUNTESTDIR/testlib/wait-on-file 5 $TESTTMP/status-race-lock.waiting
-
-remove that same file
-
-  $ hg $d2args remove dir2/l
-  $ touch $TESTTMP/status-race-lock
-  $ wait
-
-file should be marked as removed
-
-  $ hg status
-  A dir/o
-  R dir/nested/m
-  R dir2/l
-  ? dir/n
-  ? p
-  ? q
-
-The status process should return a consistent result and not crash.
-
-  $ cat $TESTTMP/status-race-lock.out
-  A dir/o
-  R dir/nested/m
-  ? dir/n
-  ? p
-  ? q
-  $ cat $TESTTMP/status-race-lock.log
-
-final cleanup
-
-  $ rm $TESTTMP/status-race-lock $TESTTMP/status-race-lock.waiting
-  $ cd ..
diff --git a/tests/test-push-race.t b/tests/test-push-race.t
deleted file mode 100644
index 13a51d6..0000000
--- a/tests/test-push-race.t
+++ /dev/null
@@ -1,1904 +0,0 @@
-============================================================================================
-Test cases where there are race condition between two clients pushing to the same repository
-============================================================================================
-
-This file tests cases where two clients push to a server at the same time. The
-"raced" client is done preparing it push bundle when the "racing" client
-perform its push. The "raced" client starts its actual push after the "racing"
-client push is fully complete.
-
-A set of extension and shell functions ensures this scheduling.
-
-  $ cat >> delaypush.py << EOF
-  > """small extension orchestrate push race
-  > 
-  > Client with the extensions will create a file when ready and get stuck until
-  > a file is created."""
-  > 
-  > import errno
-  > import os
-  > import time
-  > 
-  > from mercurial import (
-  >     exchange,
-  >     extensions,
-  >     registrar,
-  > )
-  > 
-  > configtable = {}
-  > configitem = registrar.configitem(configtable)
-  > 
-  > configitem(b'delaypush', b'ready-path',
-  >     default=None,
-  > )
-  > configitem(b'delaypush', b'release-path',
-  >     default=None,
-  > )
-  > 
-  > def delaypush(orig, pushop):
-  >     # notify we are done preparing
-  >     ui = pushop.repo.ui
-  >     readypath = ui.config(b'delaypush', b'ready-path')
-  >     if readypath is not None:
-  >         with open(readypath, 'w') as r:
-  >             r.write('foo')
-  >         ui.status(b'wrote ready: %s\n' % readypath)
-  >     # now wait for the other process to be done
-  >     watchpath = ui.config(b'delaypush', b'release-path')
-  >     if watchpath is not None:
-  >         ui.status(b'waiting on: %s\n' % watchpath)
-  >         limit = 100
-  >         test_default_timeout = os.environ.get('HGTEST_TIMEOUT_DEFAULT')
-  >         test_timeout = os.environ.get('HGTEST_TIMEOUT')
-  >         if test_default_timeout is not None:
-  >            test_default_timeout = int(test_default_timeout)
-  >         if test_timeout is not None:
-  >            test_timeout = int(test_timeout)
-  >         if (
-  >             test_default_timeout is not None
-  >             and test_timeout is not None
-  >             and test_default_timeout < test_timeout
-  >         ):
-  >             limit = int(limit * (test_timeout / test_default_timeout))
-  >         while 0 < limit and not os.path.exists(watchpath):
-  >             limit -= 1
-  >             time.sleep(0.1)
-  >         if limit <= 0:
-  >             ui.warn(b'exiting without watchfile: %s' % watchpath)
-  >         else:
-  >             # delete the file at the end of the push
-  >             def delete():
-  >                 try:
-  >                     os.unlink(watchpath)
-  >                 except FileNotFoundError:
-  >                     pass
-  >             ui.atexit(delete)
-  >     return orig(pushop)
-  > 
-  > def uisetup(ui):
-  >     extensions.wrapfunction(exchange, b'_pushbundle2', delaypush)
-  > EOF
-
-  $ waiton () {
-  >     # wait for a file to be created (then delete it)
-  >     count=100
-  >     while [ ! -f $1 ] ;
-  >     do
-  >         sleep 0.1;
-  >         count=`expr $count - 1`;
-  >         if [ $count -lt 0 ];
-  >         then
-  >              break
-  >         fi;
-  >     done
-  >     [ -f $1 ] || echo "ready file still missing: $1"
-  >     rm -f $1
-  > }
-
-  $ release () {
-  >     # create a file and wait for it be deleted
-  >     count=100
-  >     touch $1
-  >     while [ -f $1 ] ;
-  >     do
-  >         sleep 0.1;
-  >         count=`expr $count - 1`;
-  >         if [ $count -lt 0 ];
-  >         then
-  >              break
-  >         fi;
-  >     done
-  >     [ ! -f $1 ] || echo "delay file still exist: $1"
-  > }
-
-  $ cat >> $HGRCPATH << EOF
-  > [ui]
-  > # simplify output
-  > logtemplate = {node|short} {desc} ({branch})
-  > [phases]
-  > publish = no
-  > [experimental]
-  > evolution=true
-  > [alias]
-  > graph = log -G --rev 'sort(all(), "topo")'
-  > EOF
-
-We tests multiple cases:
-* strict: no race detected,
-* unrelated: race on unrelated heads are allowed.
-
-#testcases strict unrelated
-
-#if strict
-
-  $ cat >> $HGRCPATH << EOF
-  > [server]
-  > concurrent-push-mode = strict
-  > EOF
-
-#endif
-
-Setup
------
-
-create a repo with one root
-
-  $ hg init server
-  $ cd server
-  $ echo root > root
-  $ hg ci -Am "C-ROOT"
-  adding root
-  $ cd ..
-
-clone it in two clients
-
-  $ hg clone ssh://user@dummy/server client-racy
-  requesting all changes
-  adding changesets
-  adding manifests
-  adding file changes
-  added 1 changesets with 1 changes to 1 files
-  new changesets 842e2fac6304 (1 drafts)
-  updating to branch default
-  1 files updated, 0 files merged, 0 files removed, 0 files unresolved
-  $ hg clone ssh://user@dummy/server client-other
-  requesting all changes
-  adding changesets
-  adding manifests
-  adding file changes
-  added 1 changesets with 1 changes to 1 files
-  new changesets 842e2fac6304 (1 drafts)
-  updating to branch default
-  1 files updated, 0 files merged, 0 files removed, 0 files unresolved
-
-setup one to allow race on push
-
-  $ cat >> client-racy/.hg/hgrc << EOF
-  > [extensions]
-  > delaypush = $TESTTMP/delaypush.py
-  > [delaypush]
-  > ready-path = $TESTTMP/readyfile
-  > release-path = $TESTTMP/watchfile
-  > EOF
-
-Simple race, both try to push to the server at the same time
-------------------------------------------------------------
-
-Both try to replace the same head
-
-#  a
-#  | b
-#  |/
-#  *
-
-Creating changesets
-
-  $ echo b > client-other/a
-  $ hg -R client-other/ add client-other/a
-  $ hg -R client-other/ commit -m "C-A"
-  $ echo b > client-racy/b
-  $ hg -R client-racy/ add client-racy/b
-  $ hg -R client-racy/ commit -m "C-B"
-
-Pushing
-
-  $ hg -R client-racy push -r 'tip' > ./push-log 2>&1 &
-
-  $ waiton $TESTTMP/readyfile
-
-  $ hg -R client-other push -r 'tip'
-  pushing to ssh://user@dummy/server
-  searching for changes
-  remote: adding changesets
-  remote: adding manifests
-  remote: adding file changes
-  remote: added 1 changesets with 1 changes to 1 files
-
-  $ release $TESTTMP/watchfile
-
-Check the result of the push
-
-  $ cat ./push-log
-  pushing to ssh://user@dummy/server
-  searching for changes
-  wrote ready: $TESTTMP/readyfile
-  waiting on: $TESTTMP/watchfile
-  abort: push failed:
-  'remote repository changed while pushing - please try again'
-
-  $ hg -R server graph
-  o  98217d5a1659 C-A (default)
-  |
-  @  842e2fac6304 C-ROOT (default)
-  
-
-Pushing on two different heads
-------------------------------
-
-Both try to replace a different head
-
-#  a b
-#  | |
-#  * *
-#  |/
-#  *
-
-(resync-all)
-
-  $ hg -R ./server pull ./client-racy
-  pulling from ./client-racy
-  searching for changes
-  adding changesets
-  adding manifests
-  adding file changes
-  added 1 changesets with 1 changes to 1 files (+1 heads)
-  new changesets a9149a1428e2 (1 drafts)
-  (run 'hg heads' to see heads, 'hg merge' to merge)
-  $ hg -R ./client-other pull
-  pulling from ssh://user@dummy/server
-  searching for changes
-  adding changesets
-  adding manifests
-  adding file changes
-  added 1 changesets with 1 changes to 1 files (+1 heads)
-  new changesets a9149a1428e2 (1 drafts)
-  (run 'hg heads' to see heads, 'hg merge' to merge)
-  $ hg -R ./client-racy pull
-  pulling from ssh://user@dummy/server
-  searching for changes
-  adding changesets
-  adding manifests
-  adding file changes
-  added 1 changesets with 1 changes to 1 files (+1 heads)
-  new changesets 98217d5a1659 (1 drafts)
-  (run 'hg heads' to see heads, 'hg merge' to merge)
-
-  $ hg -R server graph
-  o  a9149a1428e2 C-B (default)
-  |
-  | o  98217d5a1659 C-A (default)
-  |/
-  @  842e2fac6304 C-ROOT (default)
-  
-
-Creating changesets
-
-  $ echo aa >> client-other/a
-  $ hg -R client-other/ commit -m "C-C"
-  $ echo bb >> client-racy/b
-  $ hg -R client-racy/ commit -m "C-D"
-
-Pushing
-
-  $ hg -R client-racy push -r 'tip' > ./push-log 2>&1 &
-
-  $ waiton $TESTTMP/readyfile
-
-  $ hg -R client-other push -r 'tip'
-  pushing to ssh://user@dummy/server
-  searching for changes
-  remote: adding changesets
-  remote: adding manifests
-  remote: adding file changes
-  remote: added 1 changesets with 1 changes to 1 files
-
-  $ release $TESTTMP/watchfile
-
-Check the result of the push
-
-#if strict
-  $ cat ./push-log
-  pushing to ssh://user@dummy/server
-  searching for changes
-  wrote ready: $TESTTMP/readyfile
-  waiting on: $TESTTMP/watchfile
-  abort: push failed:
-  'remote repository changed while pushing - please try again'
-
-  $ hg -R server graph
-  o  51c544a58128 C-C (default)
-  |
-  o  98217d5a1659 C-A (default)
-  |
-  | o  a9149a1428e2 C-B (default)
-  |/
-  @  842e2fac6304 C-ROOT (default)
-  
-#endif
-#if unrelated
-
-(The two heads are unrelated, push should be allowed)
-
-  $ cat ./push-log
-  pushing to ssh://user@dummy/server
-  searching for changes
-  wrote ready: $TESTTMP/readyfile
-  waiting on: $TESTTMP/watchfile
-  remote: adding changesets
-  remote: adding manifests
-  remote: adding file changes
-  remote: added 1 changesets with 1 changes to 1 files
-
-  $ hg -R server graph
-  o  59e76faf78bd C-D (default)
-  |
-  o  a9149a1428e2 C-B (default)
-  |
-  | o  51c544a58128 C-C (default)
-  | |
-  | o  98217d5a1659 C-A (default)
-  |/
-  @  842e2fac6304 C-ROOT (default)
-  
-#endif
-
-Pushing while someone creates a new head
------------------------------------------
-
-Pushing a new changeset while someone creates a new branch.
-
-#  a (raced)
-#  |
-#  * b
-#  |/
-#  *
-
-(resync-all)
-
-#if strict
-
-  $ hg -R ./server pull ./client-racy
-  pulling from ./client-racy
-  searching for changes
-  adding changesets
-  adding manifests
-  adding file changes
-  added 1 changesets with 1 changes to 1 files
-  new changesets 59e76faf78bd (1 drafts)
-  (run 'hg update' to get a working copy)
-
-#endif
-#if unrelated
-
-  $ hg -R ./server pull ./client-racy
-  pulling from ./client-racy
-  searching for changes
-  no changes found
-
-#endif
-
-  $ hg -R ./client-other pull
-  pulling from ssh://user@dummy/server
-  searching for changes
-  adding changesets
-  adding manifests
-  adding file changes
-  added 1 changesets with 1 changes to 1 files
-  new changesets 59e76faf78bd (1 drafts)
-  (run 'hg update' to get a working copy)
-  $ hg -R ./client-racy pull
-  pulling from ssh://user@dummy/server
-  searching for changes
-  adding changesets
-  adding manifests
-  adding file changes
-  added 1 changesets with 1 changes to 1 files
-  new changesets 51c544a58128 (1 drafts)
-  (run 'hg update' to get a working copy)
-
-  $ hg -R server graph
-  o  59e76faf78bd C-D (default)
-  |
-  o  a9149a1428e2 C-B (default)
-  |
-  | o  51c544a58128 C-C (default)
-  | |
-  | o  98217d5a1659 C-A (default)
-  |/
-  @  842e2fac6304 C-ROOT (default)
-  
-
-Creating changesets
-
-(new head)
-
-  $ hg -R client-other/ up 'desc("C-A")'
-  1 files updated, 0 files merged, 0 files removed, 0 files unresolved
-  $ echo aaa >> client-other/a
-  $ hg -R client-other/ commit -m "C-E"
-  created new head
-
-(children of existing head)
-
-  $ hg -R client-racy/ up 'desc("C-C")'
-  1 files updated, 0 files merged, 1 files removed, 0 files unresolved
-  $ echo bbb >> client-racy/a
-  $ hg -R client-racy/ commit -m "C-F"
-
-Pushing
-
-  $ hg -R client-racy push -r 'tip' > ./push-log 2>&1 &
-
-  $ waiton $TESTTMP/readyfile
-
-  $ hg -R client-other push -fr 'tip'
-  pushing to ssh://user@dummy/server
-  searching for changes
-  remote: adding changesets
-  remote: adding manifests
-  remote: adding file changes
-  remote: added 1 changesets with 1 changes to 1 files (+1 heads)
-
-  $ release $TESTTMP/watchfile
-
-Check the result of the push
-
-#if strict
-
-  $ cat ./push-log
-  pushing to ssh://user@dummy/server
-  searching for changes
-  wrote ready: $TESTTMP/readyfile
-  waiting on: $TESTTMP/watchfile
-  abort: push failed:
-  'remote repository changed while pushing - please try again'
-
-  $ hg -R server graph
-  o  d603e2c0cdd7 C-E (default)
-  |
-  | o  51c544a58128 C-C (default)
-  |/
-  o  98217d5a1659 C-A (default)
-  |
-  | o  59e76faf78bd C-D (default)
-  | |
-  | o  a9149a1428e2 C-B (default)
-  |/
-  @  842e2fac6304 C-ROOT (default)
-  
-
-#endif
-
-#if unrelated
-
-(The racing new head do not affect existing heads, push should go through)
-
-  $ cat ./push-log
-  pushing to ssh://user@dummy/server
-  searching for changes
-  wrote ready: $TESTTMP/readyfile
-  waiting on: $TESTTMP/watchfile
-  remote: adding changesets
-  remote: adding manifests
-  remote: adding file changes
-  remote: added 1 changesets with 1 changes to 1 files
-
-  $ hg -R server graph
-  o  d9e379a8c432 C-F (default)
-  |
-  o  51c544a58128 C-C (default)
-  |
-  | o  d603e2c0cdd7 C-E (default)
-  |/
-  o  98217d5a1659 C-A (default)
-  |
-  | o  59e76faf78bd C-D (default)
-  | |
-  | o  a9149a1428e2 C-B (default)
-  |/
-  @  842e2fac6304 C-ROOT (default)
-  
-#endif
-
-Pushing touching different named branch (same topo): new branch raced
----------------------------------------------------------------------
-
-Pushing two children on the same head, one is a different named branch
-
-#  a (raced, branch-a)
-#  |
-#  | b (default branch)
-#  |/
-#  *
-
-(resync-all)
-
-#if strict
-
-  $ hg -R ./server pull ./client-racy
-  pulling from ./client-racy
-  searching for changes
-  adding changesets
-  adding manifests
-  adding file changes
-  added 1 changesets with 1 changes to 1 files
-  new changesets d9e379a8c432 (1 drafts)
-  (run 'hg update' to get a working copy)
-
-#endif
-#if unrelated
-
-  $ hg -R ./server pull ./client-racy
-  pulling from ./client-racy
-  searching for changes
-  no changes found
-
-#endif
-
-  $ hg -R ./client-other pull
-  pulling from ssh://user@dummy/server
-  searching for changes
-  adding changesets
-  adding manifests
-  adding file changes
-  added 1 changesets with 1 changes to 1 files
-  new changesets d9e379a8c432 (1 drafts)
-  (run 'hg update' to get a working copy)
-  $ hg -R ./client-racy pull
-  pulling from ssh://user@dummy/server
-  searching for changes
-  adding changesets
-  adding manifests
-  adding file changes
-  added 1 changesets with 1 changes to 1 files (+1 heads)
-  new changesets d603e2c0cdd7 (1 drafts)
-  (run 'hg heads .' to see heads, 'hg merge' to merge)
-
-  $ hg -R server graph
-  o  d9e379a8c432 C-F (default)
-  |
-  o  51c544a58128 C-C (default)
-  |
-  | o  d603e2c0cdd7 C-E (default)
-  |/
-  o  98217d5a1659 C-A (default)
-  |
-  | o  59e76faf78bd C-D (default)
-  | |
-  | o  a9149a1428e2 C-B (default)
-  |/
-  @  842e2fac6304 C-ROOT (default)
-  
-
-Creating changesets
-
-(update existing head)
-
-  $ hg -R client-other/ up 'desc("C-F")'
-  1 files updated, 0 files merged, 0 files removed, 0 files unresolved
-  $ echo aaa >> client-other/a
-  $ hg -R client-other/ commit -m "C-G"
-
-(new named branch from that existing head)
-
-  $ hg -R client-racy/ up 'desc("C-F")'
-  0 files updated, 0 files merged, 0 files removed, 0 files unresolved
-  $ echo bbb >> client-racy/a
-  $ hg -R client-racy/ branch my-first-test-branch
-  marked working directory as branch my-first-test-branch
-  (branches are permanent and global, did you want a bookmark?)
-  $ hg -R client-racy/ commit -m "C-H"
-
-Pushing
-
-  $ hg -R client-racy push -r 'tip' --new-branch > ./push-log 2>&1 &
-
-  $ waiton $TESTTMP/readyfile
-
-  $ hg -R client-other push -fr 'tip'
-  pushing to ssh://user@dummy/server
-  searching for changes
-  remote: adding changesets
-  remote: adding manifests
-  remote: adding file changes
-  remote: added 1 changesets with 1 changes to 1 files
-
-  $ release $TESTTMP/watchfile
-
-Check the result of the push
-
-#if strict
-  $ cat ./push-log
-  pushing to ssh://user@dummy/server
-  searching for changes
-  wrote ready: $TESTTMP/readyfile
-  waiting on: $TESTTMP/watchfile
-  abort: push failed:
-  'remote repository changed while pushing - please try again'
-
-  $ hg -R server graph
-  o  75d69cba5402 C-G (default)
-  |
-  o  d9e379a8c432 C-F (default)
-  |
-  o  51c544a58128 C-C (default)
-  |
-  | o  d603e2c0cdd7 C-E (default)
-  |/
-  o  98217d5a1659 C-A (default)
-  |
-  | o  59e76faf78bd C-D (default)
-  | |
-  | o  a9149a1428e2 C-B (default)
-  |/
-  @  842e2fac6304 C-ROOT (default)
-  
-#endif
-#if unrelated
-
-(unrelated named branches are unrelated)
-
-  $ cat ./push-log
-  pushing to ssh://user@dummy/server
-  searching for changes
-  wrote ready: $TESTTMP/readyfile
-  waiting on: $TESTTMP/watchfile
-  remote: adding changesets
-  remote: adding manifests
-  remote: adding file changes
-  remote: added 1 changesets with 1 changes to 1 files (+1 heads)
-
-  $ hg -R server graph
-  o  833be552cfe6 C-H (my-first-test-branch)
-  |
-  | o  75d69cba5402 C-G (default)
-  |/
-  o  d9e379a8c432 C-F (default)
-  |
-  o  51c544a58128 C-C (default)
-  |
-  | o  d603e2c0cdd7 C-E (default)
-  |/
-  o  98217d5a1659 C-A (default)
-  |
-  | o  59e76faf78bd C-D (default)
-  | |
-  | o  a9149a1428e2 C-B (default)
-  |/
-  @  842e2fac6304 C-ROOT (default)
-  
-#endif
-
-The racing new head do not affect existing heads, push should go through
-
-pushing touching different named branch (same topo): old branch raced
----------------------------------------------------------------------
-
-Pushing two children on the same head, one is a different named branch
-
-#  a (raced, default-branch)
-#  |
-#  | b (new branch)
-#  |/
-#  * (default-branch)
-
-(resync-all)
-
-#if strict
-
-  $ hg -R ./server pull ./client-racy
-  pulling from ./client-racy
-  searching for changes
-  adding changesets
-  adding manifests
-  adding file changes
-  added 1 changesets with 1 changes to 1 files (+1 heads)
-  new changesets 833be552cfe6 (1 drafts)
-  (run 'hg heads .' to see heads, 'hg merge' to merge)
-
-#endif
-#if unrelated
-
-  $ hg -R ./server pull ./client-racy
-  pulling from ./client-racy
-  searching for changes
-  no changes found
-
-#endif
-
-  $ hg -R ./client-other pull
-  pulling from ssh://user@dummy/server
-  searching for changes
-  adding changesets
-  adding manifests
-  adding file changes
-  added 1 changesets with 1 changes to 1 files (+1 heads)
-  new changesets 833be552cfe6 (1 drafts)
-  (run 'hg heads .' to see heads, 'hg merge' to merge)
-  $ hg -R ./client-racy pull
-  pulling from ssh://user@dummy/server
-  searching for changes
-  adding changesets
-  adding manifests
-  adding file changes
-  added 1 changesets with 1 changes to 1 files (+1 heads)
-  new changesets 75d69cba5402 (1 drafts)
-  (run 'hg heads' to see heads)
-
-  $ hg -R server graph
-  o  833be552cfe6 C-H (my-first-test-branch)
-  |
-  | o  75d69cba5402 C-G (default)
-  |/
-  o  d9e379a8c432 C-F (default)
-  |
-  o  51c544a58128 C-C (default)
-  |
-  | o  d603e2c0cdd7 C-E (default)
-  |/
-  o  98217d5a1659 C-A (default)
-  |
-  | o  59e76faf78bd C-D (default)
-  | |
-  | o  a9149a1428e2 C-B (default)
-  |/
-  @  842e2fac6304 C-ROOT (default)
-  
-
-Creating changesets
-
-(new named branch from one head)
-
-  $ hg -R client-other/ up 'desc("C-G")'
-  0 files updated, 0 files merged, 0 files removed, 0 files unresolved
-  $ echo aaa >> client-other/a
-  $ hg -R client-other/ branch my-second-test-branch
-  marked working directory as branch my-second-test-branch
-  $ hg -R client-other/ commit -m "C-I"
-
-(children "updating" that same head)
-
-  $ hg -R client-racy/ up 'desc("C-G")'
-  1 files updated, 0 files merged, 0 files removed, 0 files unresolved
-  $ echo bbb >> client-racy/a
-  $ hg -R client-racy/ commit -m "C-J"
-
-Pushing
-
-  $ hg -R client-racy push -r 'tip' > ./push-log 2>&1 &
-
-  $ waiton $TESTTMP/readyfile
-
-  $ hg -R client-other push -fr 'tip' --new-branch
-  pushing to ssh://user@dummy/server
-  searching for changes
-  remote: adding changesets
-  remote: adding manifests
-  remote: adding file changes
-  remote: added 1 changesets with 1 changes to 1 files
-
-  $ release $TESTTMP/watchfile
-
-Check the result of the push
-
-#if strict
-
-  $ cat ./push-log
-  pushing to ssh://user@dummy/server
-  searching for changes
-  wrote ready: $TESTTMP/readyfile
-  waiting on: $TESTTMP/watchfile
-  abort: push failed:
-  'remote repository changed while pushing - please try again'
-
-  $ hg -R server graph
-  o  b35ed749f288 C-I (my-second-test-branch)
-  |
-  o  75d69cba5402 C-G (default)
-  |
-  | o  833be552cfe6 C-H (my-first-test-branch)
-  |/
-  o  d9e379a8c432 C-F (default)
-  |
-  o  51c544a58128 C-C (default)
-  |
-  | o  d603e2c0cdd7 C-E (default)
-  |/
-  o  98217d5a1659 C-A (default)
-  |
-  | o  59e76faf78bd C-D (default)
-  | |
-  | o  a9149a1428e2 C-B (default)
-  |/
-  @  842e2fac6304 C-ROOT (default)
-  
-
-#endif
-
-#if unrelated
-
-(unrelated named branches are unrelated)
-
-  $ cat ./push-log
-  pushing to ssh://user@dummy/server
-  searching for changes
-  wrote ready: $TESTTMP/readyfile
-  waiting on: $TESTTMP/watchfile
-  remote: adding changesets
-  remote: adding manifests
-  remote: adding file changes
-  remote: added 1 changesets with 1 changes to 1 files (+1 heads)
-
-  $ hg -R server graph
-  o  89420bf00fae C-J (default)
-  |
-  | o  b35ed749f288 C-I (my-second-test-branch)
-  |/
-  o  75d69cba5402 C-G (default)
-  |
-  | o  833be552cfe6 C-H (my-first-test-branch)
-  |/
-  o  d9e379a8c432 C-F (default)
-  |
-  o  51c544a58128 C-C (default)
-  |
-  | o  d603e2c0cdd7 C-E (default)
-  |/
-  o  98217d5a1659 C-A (default)
-  |
-  | o  59e76faf78bd C-D (default)
-  | |
-  | o  a9149a1428e2 C-B (default)
-  |/
-  @  842e2fac6304 C-ROOT (default)
-  
-
-#endif
-
-pushing racing push touch multiple heads
-----------------------------------------
-
-There are multiple heads, but the racing push touch all of them
-
-#  a (raced)
-#  | b
-#  |/|
-#  * *
-#  |/
-#  *
-
-(resync-all)
-
-#if strict
-
-  $ hg -R ./server pull ./client-racy
-  pulling from ./client-racy
-  searching for changes
-  adding changesets
-  adding manifests
-  adding file changes
-  added 1 changesets with 1 changes to 1 files (+1 heads)
-  new changesets 89420bf00fae (1 drafts)
-  (run 'hg heads .' to see heads, 'hg merge' to merge)
-
-#endif
-
-#if unrelated
-
-  $ hg -R ./server pull ./client-racy
-  pulling from ./client-racy
-  searching for changes
-  no changes found
-
-#endif
-
-  $ hg -R ./client-other pull
-  pulling from ssh://user@dummy/server
-  searching for changes
-  adding changesets
-  adding manifests
-  adding file changes
-  added 1 changesets with 1 changes to 1 files (+1 heads)
-  new changesets 89420bf00fae (1 drafts)
-  (run 'hg heads' to see heads)
-  $ hg -R ./client-racy pull
-  pulling from ssh://user@dummy/server
-  searching for changes
-  adding changesets
-  adding manifests
-  adding file changes
-  added 1 changesets with 1 changes to 1 files (+1 heads)
-  new changesets b35ed749f288 (1 drafts)
-  (run 'hg heads .' to see heads, 'hg merge' to merge)
-
-  $ hg -R server graph
-  o  89420bf00fae C-J (default)
-  |
-  | o  b35ed749f288 C-I (my-second-test-branch)
-  |/
-  o  75d69cba5402 C-G (default)
-  |
-  | o  833be552cfe6 C-H (my-first-test-branch)
-  |/
-  o  d9e379a8c432 C-F (default)
-  |
-  o  51c544a58128 C-C (default)
-  |
-  | o  d603e2c0cdd7 C-E (default)
-  |/
-  o  98217d5a1659 C-A (default)
-  |
-  | o  59e76faf78bd C-D (default)
-  | |
-  | o  a9149a1428e2 C-B (default)
-  |/
-  @  842e2fac6304 C-ROOT (default)
-  
-
-Creating changesets
-
-(merges heads)
-
-  $ hg -R client-other/ up 'desc("C-E")'
-  1 files updated, 0 files merged, 0 files removed, 0 files unresolved
-  $ hg -R client-other/ merge 'desc("C-D")'
-  1 files updated, 0 files merged, 0 files removed, 0 files unresolved
-  (branch merge, don't forget to commit)
-  $ hg -R client-other/ commit -m "C-K"
-
-(update one head)
-
-  $ hg -R client-racy/ up 'desc("C-D")'
-  1 files updated, 0 files merged, 1 files removed, 0 files unresolved
-  $ echo bbb >> client-racy/b
-  $ hg -R client-racy/ commit -m "C-L"
-
-Pushing
-
-  $ hg -R client-racy push -r 'tip' > ./push-log 2>&1 &
-
-  $ waiton $TESTTMP/readyfile
-
-  $ hg -R client-other push -fr 'tip' --new-branch
-  pushing to ssh://user@dummy/server
-  searching for changes
-  remote: adding changesets
-  remote: adding manifests
-  remote: adding file changes
-  remote: added 1 changesets with 0 changes to 0 files (-1 heads)
-
-  $ release $TESTTMP/watchfile
-
-Check the result of the push
-
-  $ cat ./push-log
-  pushing to ssh://user@dummy/server
-  searching for changes
-  wrote ready: $TESTTMP/readyfile
-  waiting on: $TESTTMP/watchfile
-  abort: push failed:
-  'remote repository changed while pushing - please try again'
-
-  $ hg -R server graph
-  o    be705100c623 C-K (default)
-  |\
-  | o  d603e2c0cdd7 C-E (default)
-  | |
-  o |  59e76faf78bd C-D (default)
-  | |
-  | | o  89420bf00fae C-J (default)
-  | | |
-  | | | o  b35ed749f288 C-I (my-second-test-branch)
-  | | |/
-  | | o  75d69cba5402 C-G (default)
-  | | |
-  | | | o  833be552cfe6 C-H (my-first-test-branch)
-  | | |/
-  | | o  d9e379a8c432 C-F (default)
-  | | |
-  | | o  51c544a58128 C-C (default)
-  | |/
-  o |  a9149a1428e2 C-B (default)
-  | |
-  | o  98217d5a1659 C-A (default)
-  |/
-  @  842e2fac6304 C-ROOT (default)
-  
-
-pushing raced push touch multiple heads
----------------------------------------
-
-There are multiple heads, the raced push touch all of them
-
-#  b
-#  | a (raced)
-#  |/|
-#  * *
-#  |/
-#  *
-
-(resync-all)
-
-  $ hg -R ./server pull ./client-racy
-  pulling from ./client-racy
-  searching for changes
-  adding changesets
-  adding manifests
-  adding file changes
-  added 1 changesets with 1 changes to 1 files (+1 heads)
-  new changesets cac2cead0ff0 (1 drafts)
-  (run 'hg heads .' to see heads, 'hg merge' to merge)
-  $ hg -R ./client-other pull
-  pulling from ssh://user@dummy/server
-  searching for changes
-  adding changesets
-  adding manifests
-  adding file changes
-  added 1 changesets with 1 changes to 1 files (+1 heads)
-  new changesets cac2cead0ff0 (1 drafts)
-  (run 'hg heads .' to see heads, 'hg merge' to merge)
-  $ hg -R ./client-racy pull
-  pulling from ssh://user@dummy/server
-  searching for changes
-  adding changesets
-  adding manifests
-  adding file changes
-  added 1 changesets with 0 changes to 0 files
-  new changesets be705100c623 (1 drafts)
-  (run 'hg update' to get a working copy)
-
-  $ hg -R server graph
-  o  cac2cead0ff0 C-L (default)
-  |
-  | o  be705100c623 C-K (default)
-  |/|
-  | o  d603e2c0cdd7 C-E (default)
-  | |
-  o |  59e76faf78bd C-D (default)
-  | |
-  | | o  89420bf00fae C-J (default)
-  | | |
-  | | | o  b35ed749f288 C-I (my-second-test-branch)
-  | | |/
-  | | o  75d69cba5402 C-G (default)
-  | | |
-  | | | o  833be552cfe6 C-H (my-first-test-branch)
-  | | |/
-  | | o  d9e379a8c432 C-F (default)
-  | | |
-  | | o  51c544a58128 C-C (default)
-  | |/
-  o |  a9149a1428e2 C-B (default)
-  | |
-  | o  98217d5a1659 C-A (default)
-  |/
-  @  842e2fac6304 C-ROOT (default)
-  
-
-Creating changesets
-
-(update existing head)
-
-  $ echo aaa >> client-other/a
-  $ hg -R client-other/ commit -m "C-M"
-
-(merge heads)
-
-  $ hg -R client-racy/ merge 'desc("C-K")'
-  1 files updated, 0 files merged, 0 files removed, 0 files unresolved
-  (branch merge, don't forget to commit)
-  $ hg -R client-racy/ commit -m "C-N"
-
-Pushing
-
-  $ hg -R client-racy push -r 'tip' > ./push-log 2>&1 &
-
-  $ waiton $TESTTMP/readyfile
-
-  $ hg -R client-other push -fr 'tip' --new-branch
-  pushing to ssh://user@dummy/server
-  searching for changes
-  remote: adding changesets
-  remote: adding manifests
-  remote: adding file changes
-  remote: added 1 changesets with 1 changes to 1 files
-
-  $ release $TESTTMP/watchfile
-
-Check the result of the push
-
-  $ cat ./push-log
-  pushing to ssh://user@dummy/server
-  searching for changes
-  wrote ready: $TESTTMP/readyfile
-  waiting on: $TESTTMP/watchfile
-  abort: push failed:
-  'remote repository changed while pushing - please try again'
-
-  $ hg -R server graph
-  o  6fd3090135df C-M (default)
-  |
-  o    be705100c623 C-K (default)
-  |\
-  | o  d603e2c0cdd7 C-E (default)
-  | |
-  +---o  cac2cead0ff0 C-L (default)
-  | |
-  o |  59e76faf78bd C-D (default)
-  | |
-  | | o  89420bf00fae C-J (default)
-  | | |
-  | | | o  b35ed749f288 C-I (my-second-test-branch)
-  | | |/
-  | | o  75d69cba5402 C-G (default)
-  | | |
-  | | | o  833be552cfe6 C-H (my-first-test-branch)
-  | | |/
-  | | o  d9e379a8c432 C-F (default)
-  | | |
-  | | o  51c544a58128 C-C (default)
-  | |/
-  o |  a9149a1428e2 C-B (default)
-  | |
-  | o  98217d5a1659 C-A (default)
-  |/
-  @  842e2fac6304 C-ROOT (default)
-  
-
-racing commit push a new head behind another named branch
----------------------------------------------------------
-
-non-continuous branch are valid case, we tests for them.
-
-#  b (branch default)
-#  |
-#  o (branch foo)
-#  |
-#  | a (raced, branch default)
-#  |/
-#  * (branch foo)
-#  |
-#  * (branch default)
-
-(resync-all + other branch)
-
-  $ hg -R ./server pull ./client-racy
-  pulling from ./client-racy
-  searching for changes
-  adding changesets
-  adding manifests
-  adding file changes
-  added 1 changesets with 0 changes to 0 files
-  new changesets 866a66e18630 (1 drafts)
-  (run 'hg update' to get a working copy)
-
-(creates named branch on head)
-
-  $ hg -R ./server/ up 'desc("C-N")'
-  2 files updated, 0 files merged, 0 files removed, 0 files unresolved
-  $ hg -R ./server/ branch other
-  marked working directory as branch other
-  $ hg -R ./server/ ci -m "C-Z"
-  $ hg -R ./server/ up null
-  0 files updated, 0 files merged, 3 files removed, 0 files unresolved
-
-(sync client)
-
-  $ hg -R ./client-other pull
-  pulling from ssh://user@dummy/server
-  searching for changes
-  adding changesets
-  adding manifests
-  adding file changes
-  added 2 changesets with 0 changes to 0 files
-  new changesets 866a66e18630:55a6f1c01b48 (2 drafts)
-  (run 'hg update' to get a working copy)
-  $ hg -R ./client-racy pull
-  pulling from ssh://user@dummy/server
-  searching for changes
-  adding changesets
-  adding manifests
-  adding file changes
-  added 2 changesets with 1 changes to 1 files (+1 heads)
-  new changesets 6fd3090135df:55a6f1c01b48 (2 drafts)
-  (run 'hg heads .' to see heads, 'hg merge' to merge)
-
-  $ hg -R server graph
-  o  55a6f1c01b48 C-Z (other)
-  |
-  o    866a66e18630 C-N (default)
-  |\
-  +---o  6fd3090135df C-M (default)
-  | |
-  | o  cac2cead0ff0 C-L (default)
-  | |
-  o |  be705100c623 C-K (default)
-  |\|
-  o |  d603e2c0cdd7 C-E (default)
-  | |
-  | o  59e76faf78bd C-D (default)
-  | |
-  | | o  89420bf00fae C-J (default)
-  | | |
-  | | | o  b35ed749f288 C-I (my-second-test-branch)
-  | | |/
-  | | o  75d69cba5402 C-G (default)
-  | | |
-  | | | o  833be552cfe6 C-H (my-first-test-branch)
-  | | |/
-  | | o  d9e379a8c432 C-F (default)
-  | | |
-  +---o  51c544a58128 C-C (default)
-  | |
-  | o  a9149a1428e2 C-B (default)
-  | |
-  o |  98217d5a1659 C-A (default)
-  |/
-  o  842e2fac6304 C-ROOT (default)
-  
-
-Creating changesets
-
-(update default head through another named branch one)
-
-  $ hg -R client-other/ up 'desc("C-Z")'
-  2 files updated, 0 files merged, 0 files removed, 0 files unresolved
-  $ echo aaa >> client-other/a
-  $ hg -R client-other/ commit -m "C-O"
-  $ echo aaa >> client-other/a
-  $ hg -R client-other/ branch --force default
-  marked working directory as branch default
-  $ hg -R client-other/ commit -m "C-P"
-  created new head
-
-(update default head)
-
-  $ hg -R client-racy/ up 'desc("C-Z")'
-  0 files updated, 0 files merged, 0 files removed, 0 files unresolved
-  $ echo bbb >> client-other/a
-  $ hg -R client-racy/ branch --force default
-  marked working directory as branch default
-  $ hg -R client-racy/ commit -m "C-Q"
-  created new head
-
-Pushing
-
-  $ hg -R client-racy push -r 'tip' > ./push-log 2>&1 &
-
-  $ waiton $TESTTMP/readyfile
-
-  $ hg -R client-other push -fr 'tip' --new-branch
-  pushing to ssh://user@dummy/server
-  searching for changes
-  remote: adding changesets
-  remote: adding manifests
-  remote: adding file changes
-  remote: added 2 changesets with 1 changes to 1 files
-
-  $ release $TESTTMP/watchfile
-
-Check the result of the push
-
-  $ cat ./push-log
-  pushing to ssh://user@dummy/server
-  searching for changes
-  wrote ready: $TESTTMP/readyfile
-  waiting on: $TESTTMP/watchfile
-  abort: push failed:
-  'remote repository changed while pushing - please try again'
-
-  $ hg -R server graph
-  o  1b58ee3f79e5 C-P (default)
-  |
-  o  d0a85b2252a9 C-O (other)
-  |
-  o  55a6f1c01b48 C-Z (other)
-  |
-  o    866a66e18630 C-N (default)
-  |\
-  +---o  6fd3090135df C-M (default)
-  | |
-  | o  cac2cead0ff0 C-L (default)
-  | |
-  o |  be705100c623 C-K (default)
-  |\|
-  o |  d603e2c0cdd7 C-E (default)
-  | |
-  | o  59e76faf78bd C-D (default)
-  | |
-  | | o  89420bf00fae C-J (default)
-  | | |
-  | | | o  b35ed749f288 C-I (my-second-test-branch)
-  | | |/
-  | | o  75d69cba5402 C-G (default)
-  | | |
-  | | | o  833be552cfe6 C-H (my-first-test-branch)
-  | | |/
-  | | o  d9e379a8c432 C-F (default)
-  | | |
-  +---o  51c544a58128 C-C (default)
-  | |
-  | o  a9149a1428e2 C-B (default)
-  | |
-  o |  98217d5a1659 C-A (default)
-  |/
-  o  842e2fac6304 C-ROOT (default)
-  
-
-raced commit push a new head behind another named branch
----------------------------------------------------------
-
-non-continuous branch are valid case, we tests for them.
-
-#  b (raced branch default)
-#  |
-#  o (branch foo)
-#  |
-#  | a (branch default)
-#  |/
-#  * (branch foo)
-#  |
-#  * (branch default)
-
-(resync-all)
-
-  $ hg -R ./server pull ./client-racy
-  pulling from ./client-racy
-  searching for changes
-  adding changesets
-  adding manifests
-  adding file changes
-  added 1 changesets with 0 changes to 0 files (+1 heads)
-  new changesets b0ee3d6f51bc (1 drafts)
-  (run 'hg heads .' to see heads, 'hg merge' to merge)
-  $ hg -R ./client-other pull
-  pulling from ssh://user@dummy/server
-  searching for changes
-  adding changesets
-  adding manifests
-  adding file changes
-  added 1 changesets with 0 changes to 0 files (+1 heads)
-  new changesets b0ee3d6f51bc (1 drafts)
-  (run 'hg heads .' to see heads, 'hg merge' to merge)
-  $ hg -R ./client-racy pull
-  pulling from ssh://user@dummy/server
-  searching for changes
-  adding changesets
-  adding manifests
-  adding file changes
-  added 2 changesets with 1 changes to 1 files (+1 heads)
-  new changesets d0a85b2252a9:1b58ee3f79e5 (2 drafts)
-  (run 'hg heads .' to see heads, 'hg merge' to merge)
-
-  $ hg -R server graph
-  o  b0ee3d6f51bc C-Q (default)
-  |
-  | o  1b58ee3f79e5 C-P (default)
-  | |
-  | o  d0a85b2252a9 C-O (other)
-  |/
-  o  55a6f1c01b48 C-Z (other)
-  |
-  o    866a66e18630 C-N (default)
-  |\
-  +---o  6fd3090135df C-M (default)
-  | |
-  | o  cac2cead0ff0 C-L (default)
-  | |
-  o |  be705100c623 C-K (default)
-  |\|
-  o |  d603e2c0cdd7 C-E (default)
-  | |
-  | o  59e76faf78bd C-D (default)
-  | |
-  | | o  89420bf00fae C-J (default)
-  | | |
-  | | | o  b35ed749f288 C-I (my-second-test-branch)
-  | | |/
-  | | o  75d69cba5402 C-G (default)
-  | | |
-  | | | o  833be552cfe6 C-H (my-first-test-branch)
-  | | |/
-  | | o  d9e379a8c432 C-F (default)
-  | | |
-  +---o  51c544a58128 C-C (default)
-  | |
-  | o  a9149a1428e2 C-B (default)
-  | |
-  o |  98217d5a1659 C-A (default)
-  |/
-  o  842e2fac6304 C-ROOT (default)
-  
-
-Creating changesets
-
-(update 'other' named branch head)
-
-  $ hg -R client-other/ up 'desc("C-P")'
-  0 files updated, 0 files merged, 0 files removed, 0 files unresolved
-  $ echo aaa >> client-other/a
-  $ hg -R client-other/ branch --force other
-  marked working directory as branch other
-  $ hg -R client-other/ commit -m "C-R"
-  created new head
-
-(update 'other named brnach through a 'default' changeset')
-
-  $ hg -R client-racy/ up 'desc("C-P")'
-  1 files updated, 0 files merged, 0 files removed, 0 files unresolved
-  $ echo bbb >> client-racy/a
-  $ hg -R client-racy/ commit -m "C-S"
-  $ echo bbb >> client-racy/a
-  $ hg -R client-racy/ branch --force other
-  marked working directory as branch other
-  $ hg -R client-racy/ commit -m "C-T"
-  created new head
-
-Pushing
-
-  $ hg -R client-racy push -r 'tip' > ./push-log 2>&1 &
-
-  $ waiton $TESTTMP/readyfile
-
-  $ hg -R client-other push -fr 'tip' --new-branch
-  pushing to ssh://user@dummy/server
-  searching for changes
-  remote: adding changesets
-  remote: adding manifests
-  remote: adding file changes
-  remote: added 1 changesets with 1 changes to 1 files
-
-  $ release $TESTTMP/watchfile
-
-Check the result of the push
-
-  $ cat ./push-log
-  pushing to ssh://user@dummy/server
-  searching for changes
-  wrote ready: $TESTTMP/readyfile
-  waiting on: $TESTTMP/watchfile
-  abort: push failed:
-  'remote repository changed while pushing - please try again'
-
-  $ hg -R server graph
-  o  de7b9e2ba3f6 C-R (other)
-  |
-  o  1b58ee3f79e5 C-P (default)
-  |
-  o  d0a85b2252a9 C-O (other)
-  |
-  | o  b0ee3d6f51bc C-Q (default)
-  |/
-  o  55a6f1c01b48 C-Z (other)
-  |
-  o    866a66e18630 C-N (default)
-  |\
-  +---o  6fd3090135df C-M (default)
-  | |
-  | o  cac2cead0ff0 C-L (default)
-  | |
-  o |  be705100c623 C-K (default)
-  |\|
-  o |  d603e2c0cdd7 C-E (default)
-  | |
-  | o  59e76faf78bd C-D (default)
-  | |
-  | | o  89420bf00fae C-J (default)
-  | | |
-  | | | o  b35ed749f288 C-I (my-second-test-branch)
-  | | |/
-  | | o  75d69cba5402 C-G (default)
-  | | |
-  | | | o  833be552cfe6 C-H (my-first-test-branch)
-  | | |/
-  | | o  d9e379a8c432 C-F (default)
-  | | |
-  +---o  51c544a58128 C-C (default)
-  | |
-  | o  a9149a1428e2 C-B (default)
-  | |
-  o |  98217d5a1659 C-A (default)
-  |/
-  o  842e2fac6304 C-ROOT (default)
-  
-
-raced commit push a new head obsoleting the one touched by the racing push
---------------------------------------------------------------------------
-
-#  b (racing)
-#  |
-#  ø⇠◔ a (raced)
-#  |/
-#  *
-
-(resync-all)
-
-  $ hg -R ./server pull ./client-racy
-  pulling from ./client-racy
-  searching for changes
-  adding changesets
-  adding manifests
-  adding file changes
-  added 2 changesets with 2 changes to 1 files (+1 heads)
-  new changesets 2efd43f7b5ba:3d57ed3c1091 (2 drafts)
-  (run 'hg heads .' to see heads, 'hg merge' to merge)
-  $ hg -R ./client-other pull
-  pulling from ssh://user@dummy/server
-  searching for changes
-  adding changesets
-  adding manifests
-  adding file changes
-  added 2 changesets with 2 changes to 1 files (+1 heads)
-  new changesets 2efd43f7b5ba:3d57ed3c1091 (2 drafts)
-  (run 'hg heads' to see heads, 'hg merge' to merge)
-  $ hg -R ./client-racy pull
-  pulling from ssh://user@dummy/server
-  searching for changes
-  adding changesets
-  adding manifests
-  adding file changes
-  added 1 changesets with 1 changes to 1 files (+1 heads)
-  new changesets de7b9e2ba3f6 (1 drafts)
-  (run 'hg heads' to see heads, 'hg merge' to merge)
-
-  $ hg -R server graph
-  o  3d57ed3c1091 C-T (other)
-  |
-  o  2efd43f7b5ba C-S (default)
-  |
-  | o  de7b9e2ba3f6 C-R (other)
-  |/
-  o  1b58ee3f79e5 C-P (default)
-  |
-  o  d0a85b2252a9 C-O (other)
-  |
-  | o  b0ee3d6f51bc C-Q (default)
-  |/
-  o  55a6f1c01b48 C-Z (other)
-  |
-  o    866a66e18630 C-N (default)
-  |\
-  +---o  6fd3090135df C-M (default)
-  | |
-  | o  cac2cead0ff0 C-L (default)
-  | |
-  o |  be705100c623 C-K (default)
-  |\|
-  o |  d603e2c0cdd7 C-E (default)
-  | |
-  | o  59e76faf78bd C-D (default)
-  | |
-  | | o  89420bf00fae C-J (default)
-  | | |
-  | | | o  b35ed749f288 C-I (my-second-test-branch)
-  | | |/
-  | | o  75d69cba5402 C-G (default)
-  | | |
-  | | | o  833be552cfe6 C-H (my-first-test-branch)
-  | | |/
-  | | o  d9e379a8c432 C-F (default)
-  | | |
-  +---o  51c544a58128 C-C (default)
-  | |
-  | o  a9149a1428e2 C-B (default)
-  | |
-  o |  98217d5a1659 C-A (default)
-  |/
-  o  842e2fac6304 C-ROOT (default)
-  
-
-Creating changesets and markers
-
-(continue existing head)
-
-  $ hg -R client-other/ up 'desc("C-Q")'
-  1 files updated, 0 files merged, 0 files removed, 0 files unresolved
-  $ echo aaa >> client-other/a
-  $ hg -R client-other/ commit -m "C-U"
-
-(new topo branch obsoleting that same head)
-
-  $ hg -R client-racy/ up 'desc("C-Z")'
-  1 files updated, 0 files merged, 0 files removed, 0 files unresolved
-  $ echo bbb >> client-racy/a
-  $ hg -R client-racy/ branch --force default
-  marked working directory as branch default
-  $ hg -R client-racy/ commit -m "C-V"
-  created new head
-  $ ID_Q=`hg -R client-racy log -T '{node}\n' -r 'desc("C-Q")'`
-  $ ID_V=`hg -R client-racy log -T '{node}\n' -r 'desc("C-V")'`
-  $ hg -R client-racy debugobsolete $ID_Q $ID_V
-  1 new obsolescence markers
-  obsoleted 1 changesets
-
-Pushing
-
-  $ hg -R client-racy push -r 'tip' > ./push-log 2>&1 &
-
-  $ waiton $TESTTMP/readyfile
-
-  $ hg -R client-other push -fr 'tip' --new-branch
-  pushing to ssh://user@dummy/server
-  searching for changes
-  remote: adding changesets
-  remote: adding manifests
-  remote: adding file changes
-  remote: added 1 changesets with 0 changes to 0 files
-
-  $ release $TESTTMP/watchfile
-
-Check the result of the push
-
-  $ cat ./push-log
-  pushing to ssh://user@dummy/server
-  searching for changes
-  wrote ready: $TESTTMP/readyfile
-  waiting on: $TESTTMP/watchfile
-  abort: push failed:
-  'remote repository changed while pushing - please try again'
-
-  $ hg -R server debugobsolete
-  $ hg -R server graph
-  o  a98a47d8b85b C-U (default)
-  |
-  o  b0ee3d6f51bc C-Q (default)
-  |
-  | o  3d57ed3c1091 C-T (other)
-  | |
-  | o  2efd43f7b5ba C-S (default)
-  | |
-  | | o  de7b9e2ba3f6 C-R (other)
-  | |/
-  | o  1b58ee3f79e5 C-P (default)
-  | |
-  | o  d0a85b2252a9 C-O (other)
-  |/
-  o  55a6f1c01b48 C-Z (other)
-  |
-  o    866a66e18630 C-N (default)
-  |\
-  +---o  6fd3090135df C-M (default)
-  | |
-  | o  cac2cead0ff0 C-L (default)
-  | |
-  o |  be705100c623 C-K (default)
-  |\|
-  o |  d603e2c0cdd7 C-E (default)
-  | |
-  | o  59e76faf78bd C-D (default)
-  | |
-  | | o  89420bf00fae C-J (default)
-  | | |
-  | | | o  b35ed749f288 C-I (my-second-test-branch)
-  | | |/
-  | | o  75d69cba5402 C-G (default)
-  | | |
-  | | | o  833be552cfe6 C-H (my-first-test-branch)
-  | | |/
-  | | o  d9e379a8c432 C-F (default)
-  | | |
-  +---o  51c544a58128 C-C (default)
-  | |
-  | o  a9149a1428e2 C-B (default)
-  | |
-  o |  98217d5a1659 C-A (default)
-  |/
-  o  842e2fac6304 C-ROOT (default)
-  
-
-racing commit push a new head obsoleting the one touched by the raced push
---------------------------------------------------------------------------
-
-(mirror test case of the previous one
-
-#  a (raced branch default)
-#  |
-#  ø⇠◔ b (racing)
-#  |/
-#  *
-
-(resync-all)
-
-  $ hg -R ./server pull ./client-racy
-  pulling from ./client-racy
-  searching for changes
-  adding changesets
-  adding manifests
-  adding file changes
-  added 1 changesets with 1 changes to 1 files (+1 heads)
-  1 new obsolescence markers
-  obsoleted 1 changesets
-  1 new orphan changesets
-  new changesets 720c5163ecf6 (1 drafts)
-  (run 'hg heads .' to see heads, 'hg merge' to merge)
-  $ hg -R ./client-other pull
-  pulling from ssh://user@dummy/server
-  searching for changes
-  adding changesets
-  adding manifests
-  adding file changes
-  added 1 changesets with 1 changes to 1 files (+1 heads)
-  1 new obsolescence markers
-  obsoleted 1 changesets
-  1 new orphan changesets
-  new changesets 720c5163ecf6 (1 drafts)
-  (run 'hg heads .' to see heads, 'hg merge' to merge)
-  $ hg -R ./client-racy pull
-  pulling from ssh://user@dummy/server
-  searching for changes
-  adding changesets
-  adding manifests
-  adding file changes
-  added 1 changesets with 0 changes to 0 files
-  1 new orphan changesets
-  new changesets a98a47d8b85b (1 drafts)
-  (run 'hg update' to get a working copy)
-
-  $ hg -R server debugobsolete
-  b0ee3d6f51bc4c0ca6d4f2907708027a6c376233 720c5163ecf64dcc6216bee2d62bf3edb1882499 0 (Thu Jan 01 00:00:00 1970 +0000) {'user': 'test'}
-  $ hg -R server graph
-  o  720c5163ecf6 C-V (default)
-  |
-  | *  a98a47d8b85b C-U (default)
-  | |
-  | x  b0ee3d6f51bc C-Q (default)
-  |/
-  | o  3d57ed3c1091 C-T (other)
-  | |
-  | o  2efd43f7b5ba C-S (default)
-  | |
-  | | o  de7b9e2ba3f6 C-R (other)
-  | |/
-  | o  1b58ee3f79e5 C-P (default)
-  | |
-  | o  d0a85b2252a9 C-O (other)
-  |/
-  o  55a6f1c01b48 C-Z (other)
-  |
-  o    866a66e18630 C-N (default)
-  |\
-  +---o  6fd3090135df C-M (default)
-  | |
-  | o  cac2cead0ff0 C-L (default)
-  | |
-  o |  be705100c623 C-K (default)
-  |\|
-  o |  d603e2c0cdd7 C-E (default)
-  | |
-  | o  59e76faf78bd C-D (default)
-  | |
-  | | o  89420bf00fae C-J (default)
-  | | |
-  | | | o  b35ed749f288 C-I (my-second-test-branch)
-  | | |/
-  | | o  75d69cba5402 C-G (default)
-  | | |
-  | | | o  833be552cfe6 C-H (my-first-test-branch)
-  | | |/
-  | | o  d9e379a8c432 C-F (default)
-  | | |
-  +---o  51c544a58128 C-C (default)
-  | |
-  | o  a9149a1428e2 C-B (default)
-  | |
-  o |  98217d5a1659 C-A (default)
-  |/
-  o  842e2fac6304 C-ROOT (default)
-  
-
-Creating changesets and markers
-
-(new topo branch obsoleting that same head)
-
-  $ hg -R client-other/ up 'desc("C-Q")'
-  1 files updated, 0 files merged, 0 files removed, 0 files unresolved
-  $ echo bbb >> client-other/a
-  $ hg -R client-other/ branch --force default
-  marked working directory as branch default
-  $ hg -R client-other/ commit -m "C-W"
-  1 new orphan changesets
-  created new head
-  $ ID_V=`hg -R client-other log -T '{node}\n' -r 'desc("C-V")'`
-  $ ID_W=`hg -R client-other log -T '{node}\n' -r 'desc("C-W")'`
-  $ hg -R client-other debugobsolete $ID_V $ID_W
-  1 new obsolescence markers
-  obsoleted 1 changesets
-
-(continue the same head)
-
-  $ echo aaa >> client-racy/a
-  $ hg -R client-racy/ commit -m "C-X"
-
-Pushing
-
-  $ hg -R client-racy push -r 'tip' > ./push-log 2>&1 &
-
-  $ waiton $TESTTMP/readyfile
-
-  $ hg -R client-other push -fr 'tip' --new-branch
-  pushing to ssh://user@dummy/server
-  searching for changes
-  remote: adding changesets
-  remote: adding manifests
-  remote: adding file changes
-  remote: added 1 changesets with 0 changes to 1 files (+1 heads)
-  remote: 1 new obsolescence markers
-  remote: obsoleted 1 changesets
-  remote: 1 new orphan changesets
-
-  $ release $TESTTMP/watchfile
-
-Check the result of the push
-
-  $ cat ./push-log
-  pushing to ssh://user@dummy/server
-  searching for changes
-  wrote ready: $TESTTMP/readyfile
-  waiting on: $TESTTMP/watchfile
-  abort: push failed:
-  'remote repository changed while pushing - please try again'
-
-  $ hg -R server debugobsolete
-  b0ee3d6f51bc4c0ca6d4f2907708027a6c376233 720c5163ecf64dcc6216bee2d62bf3edb1882499 0 (Thu Jan 01 00:00:00 1970 +0000) {'user': 'test'}
-  720c5163ecf64dcc6216bee2d62bf3edb1882499 39bc0598afe90ab18da460bafecc0fa953b77596 0 (Thu Jan 01 00:00:00 1970 +0000) {'user': 'test'}
-  $ hg -R server graph --hidden
-  *  39bc0598afe9 C-W (default)
-  |
-  | *  a98a47d8b85b C-U (default)
-  |/
-  x  b0ee3d6f51bc C-Q (default)
-  |
-  | o  3d57ed3c1091 C-T (other)
-  | |
-  | o  2efd43f7b5ba C-S (default)
-  | |
-  | | o  de7b9e2ba3f6 C-R (other)
-  | |/
-  | o  1b58ee3f79e5 C-P (default)
-  | |
-  | o  d0a85b2252a9 C-O (other)
-  |/
-  | x  720c5163ecf6 C-V (default)
-  |/
-  o  55a6f1c01b48 C-Z (other)
-  |
-  o    866a66e18630 C-N (default)
-  |\
-  +---o  6fd3090135df C-M (default)
-  | |
-  | o  cac2cead0ff0 C-L (default)
-  | |
-  o |  be705100c623 C-K (default)
-  |\|
-  o |  d603e2c0cdd7 C-E (default)
-  | |
-  | o  59e76faf78bd C-D (default)
-  | |
-  | | o  89420bf00fae C-J (default)
-  | | |
-  | | | o  b35ed749f288 C-I (my-second-test-branch)
-  | | |/
-  | | o  75d69cba5402 C-G (default)
-  | | |
-  | | | o  833be552cfe6 C-H (my-first-test-branch)
-  | | |/
-  | | o  d9e379a8c432 C-F (default)
-  | | |
-  +---o  51c544a58128 C-C (default)
-  | |
-  | o  a9149a1428e2 C-B (default)
-  | |
-  o |  98217d5a1659 C-A (default)
-  |/
-  o  842e2fac6304 C-ROOT (default)
-  
diff --git a/tests/test-transaction-wc-rollback-race.t b/tests/test-transaction-wc-rollback-race.t
deleted file mode 100644
index 1395445..0000000
--- a/tests/test-transaction-wc-rollback-race.t
+++ /dev/null
@@ -1,263 +0,0 @@
-=======================================================================
-Check potential race condition around transaction and working copy data
-=======================================================================
-
-#testcases bookmarks-in-store bookmarks-wc-level
-
-The transaction is garanteed to run with the lock, but may runs without the
-wlock. So if the transaction backup/restore some content related to the
-working-copy and protected by the wlock, we might run into trouble if another
-process grab the wlock and modify them.
-
-This test file is testing various cases where such parallel changes happens to
-validate the transaction behavior.
-
-Other is used to get a simple pull source. As pull is a simple way to create
-transaction without the wlock.
-
-Setup
-=====
-
-Avoid long deadlock
-
-  $ cat << EOF >> $HGRCPATH
-  > [ui]
-  > timeout=10
-  > EOF
-
-#if bookmarks-in-store
-  $ cat << EOF >> $HGRCPATH
-  > [format]
-  > bookmarks-in-store = yes
-  > EOF
-#endif
-
-
-  $ hg init repo
-  $ cd repo
-  $ for filename in a b c d e f g h i j k l m; do
-  >     echo $filename > default_$filename
-  >     hg add default_$filename
-  >     hg commit --quiet --message default_$filename
-  > done
-  $ hg bookmark --rev . foo
-  $ hg branch babar
-  marked working directory as branch babar
-  (branches are permanent and global, did you want a bookmark?)
-  $ for filename in a b c d e f g h i j k l m; do
-  >     echo $filename > babar_$filename
-  >     hg add babar_$filename
-  >     hg commit --quiet --message babar_$filename
-  > done
-  $ hg bookmark --rev . bar
-  $ hg up 'desc("default_m")'
-  0 files updated, 0 files merged, 13 files removed, 0 files unresolved
-  $ hg log -G -T '[{branch}] ({bookmarks}) {desc}\n'
-  o  [babar] (bar) babar_m
-  |
-  o  [babar] () babar_l
-  |
-  o  [babar] () babar_k
-  |
-  o  [babar] () babar_j
-  |
-  o  [babar] () babar_i
-  |
-  o  [babar] () babar_h
-  |
-  o  [babar] () babar_g
-  |
-  o  [babar] () babar_f
-  |
-  o  [babar] () babar_e
-  |
-  o  [babar] () babar_d
-  |
-  o  [babar] () babar_c
-  |
-  o  [babar] () babar_b
-  |
-  o  [babar] () babar_a
-  |
-  @  [default] (foo) default_m
-  |
-  o  [default] () default_l
-  |
-  o  [default] () default_k
-  |
-  o  [default] () default_j
-  |
-  o  [default] () default_i
-  |
-  o  [default] () default_h
-  |
-  o  [default] () default_g
-  |
-  o  [default] () default_f
-  |
-  o  [default] () default_e
-  |
-  o  [default] () default_d
-  |
-  o  [default] () default_c
-  |
-  o  [default] () default_b
-  |
-  o  [default] () default_a
-  
-
-  $ cat << EOF >> ../txn-close.sh
-  > rm -f $TESTTMP/transaction-continue
-  > $RUNTESTDIR/testlib/wait-on-file 5 $TESTTMP/transaction-continue $TESTTMP/transaction-waiting
-  > rm -f $TESTTMP/transaction-waiting
-  > exit 1
-  > EOF
-  $ cat << EOF >> .hg/hgrc
-  > [hooks]
-  > pretxnclose.test = sh $TESTTMP/txn-close.sh
-  > EOF
-
-Check the overall logic is working, the transaction is holding the `lock` , but
-not the `wlock`, then get aborted on a signal-file.
-
-  $ hg phase --rev 0
-  0: draft
-  $ hg phase --public --rev 0 2> ../log.err &
-  $ $RUNTESTDIR/testlib/wait-on-file 5 $TESTTMP/transaction-waiting
-  $ echo y | hg --config ui.interactive=yes debuglock --set-wlock
-  ready to release the lock (y)?  y
-  $ echo y | hg --config ui.interactive=yes debuglock --set-lock
-  abort: lock is already held
-  [255]
-  $ touch $TESTTMP/transaction-continue
-  $ wait
-  $ hg phase --rev 0
-  0: draft
-  $ cat ../log.err
-  abort: pretxnclose.test hook exited with status 1
-
-Actual testing
-==============
-
-Changing tracked file
----------------------
-
-  $ hg status
-  $ hg phase --public --rev 0 2> ../log.err &
-  $ $RUNTESTDIR/testlib/wait-on-file 5 $TESTTMP/transaction-waiting
-  $ hg forget default_a
-  $ hg status
-  R default_a
-  $ touch $TESTTMP/transaction-continue
-  $ wait
-  $ hg status
-  R default_a
-  $ hg revert --all --quiet
-
-Changing branch from default
-----------------------------
-
-  $ hg branch
-  default
-  $ hg phase --public --rev 0 2> ../log.err &
-  $ $RUNTESTDIR/testlib/wait-on-file 5 $TESTTMP/transaction-waiting
-  $ hg branch celeste
-  marked working directory as branch celeste
-  $ hg branch
-  celeste
-  $ touch $TESTTMP/transaction-continue
-  $ wait
-  $ hg branch
-  celeste
-
-Changing branch from another one
---------------------------------
-
-  $ hg up babar --quiet
-  $ hg branch
-  babar
-  $ hg phase --public --rev 0 2> ../log.err &
-  $ $RUNTESTDIR/testlib/wait-on-file 5 $TESTTMP/transaction-waiting
-  $ hg branch celeste
-  marked working directory as branch celeste
-  $ hg branch
-  celeste
-  $ touch $TESTTMP/transaction-continue
-  $ wait
-  $ hg branch
-  celeste
-
-updating working copy
----------------------
-
-  $ hg st
-  $ hg log --rev . -T '{desc}\n'
-  babar_m
-  $ hg phase --public --rev 0 2> ../log.err &
-  $ $RUNTESTDIR/testlib/wait-on-file 5 $TESTTMP/transaction-waiting
-  $ hg update "parents(.)" --quiet
-  $ hg log --rev . -T '{desc}\n'
-  babar_l
-  $ hg st
-  $ touch $TESTTMP/transaction-continue
-  $ wait
-  $ hg log --rev . -T '{desc}\n'
-  babar_l
-  $ hg st
-
-  $ hg purge --no-confirm
-  $ hg up --quiet babar
-
-Activating a bookmark
----------------------
-(without going through the bookmark command)
-
-Show the activation/desactivation pattern that exist without taking the store
-lock.
-
-  $ hg log -r . -T '= {activebookmark} =\n'
-  =  =
-  $ hg up bar
-  0 files updated, 0 files merged, 0 files removed, 0 files unresolved
-  (activating bookmark bar)
-  $ hg log -r . -T '= {activebookmark} =\n'
-  = bar =
-  $ hg up .
-  0 files updated, 0 files merged, 0 files removed, 0 files unresolved
-  (leaving bookmark bar)
-  $ hg log -r . -T '= {activebookmark} =\n'
-  =  =
-
-Activating the bookmark during a transaction
-
-  $ hg up . --quiet
-  $ hg log -r . -T '= {activebookmark} =\n'
-  =  =
-  $ hg phase --public --rev 0 2> ../log.err &
-  $ $RUNTESTDIR/testlib/wait-on-file 5 $TESTTMP/transaction-waiting
-  $ hg up bar
-  0 files updated, 0 files merged, 0 files removed, 0 files unresolved
-  (activating bookmark bar)
-  $ hg log -r . -T '= {activebookmark} =\n'
-  = bar =
-  $ touch $TESTTMP/transaction-continue
-  $ wait
-  $ hg log -r . -T '= {activebookmark} =\n'
-  = bar =
-
-Deactivating the bookmark
-
-  $ hg up bar --quiet
-  $ hg log -r . -T '= {activebookmark} =\n'
-  = bar =
-  $ hg phase --public --rev 0 2> ../log.err &
-  $ $RUNTESTDIR/testlib/wait-on-file 5 $TESTTMP/transaction-waiting
-  $ hg up .
-  0 files updated, 0 files merged, 0 files removed, 0 files unresolved
-  (leaving bookmark bar)
-  $ hg log -r . -T '= {activebookmark} =\n'
-  =  =
-  $ touch $TESTTMP/transaction-continue
-  $ wait
-  $ hg log -r . -T '= {activebookmark} =\n'
-  =  =
-- 
2.41.0

